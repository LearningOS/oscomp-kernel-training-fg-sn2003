{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2","program":"/home/stellaris/.rustup/toolchains/nightly-2022-04-11-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","modular_bitfield","--edition=2018","/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=94957a479c84001f","-C","extra-filename=-94957a479c84001f","--out-dir","/home/stellaris/operation_system/oskernel2022-oops/kernel/target/rls/riscv64gc-unknown-none-elf/debug/deps","--target","riscv64gc-unknown-none-elf","-L","dependency=/home/stellaris/operation_system/oskernel2022-oops/kernel/target/rls/riscv64gc-unknown-none-elf/debug/deps","-L","dependency=/home/stellaris/operation_system/oskernel2022-oops/kernel/target/rls/debug/deps","--extern","modular_bitfield_impl=/home/stellaris/operation_system/oskernel2022-oops/kernel/target/rls/debug/deps/libmodular_bitfield_impl-e3d64159dddf5528.so","--extern","static_assertions=/home/stellaris/operation_system/oskernel2022-oops/kernel/target/rls/riscv64gc-unknown-none-elf/debug/deps/libstatic_assertions-4c2d683a70dc5f90.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/stellaris/.rustup/toolchains/nightly-2022-04-11-x86_64-unknown-linux-gnu"],"output":"/home/stellaris/operation_system/oskernel2022-oops/kernel/target/rls/riscv64gc-unknown-none-elf/debug/deps/libmodular_bitfield-94957a479c84001f.rmeta"},"prelude":{"crate_id":{"name":"modular_bitfield","disambiguator":[8844557591009752089,0]},"crate_root":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src","external_crates":[{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[16824974774548153985,0]}},{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[18062996579175346233,0]}},{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[1534907499907218240,0]}},{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","num":4,"id":{"name":"static_assertions","disambiguator":[15385229541542099268,0]}},{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","num":5,"id":{"name":"modular_bitfield_impl","disambiguator":[2568723750367000695,0]}}],"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":0,"byte_end":15514,"line_start":1,"line_end":496,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/mod.rs","byte_start":16809,"byte_end":16810,"line_start":9,"line_end":9,"column_start":32,"column_end":33},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":184}},{"kind":"Use","ref_id":{"krate":0,"index":23},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/mod.rs","byte_start":16852,"byte_end":16872,"line_start":12,"line_end":12,"column_start":23,"column_end":43},"alias_span":null,"name":"ArrayBytesConversion","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":127},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/mod.rs","byte_start":16894,"byte_end":16908,"line_start":14,"line_end":14,"column_start":9,"column_end":23},"alias_span":null,"name":"read_specifier","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":129},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/mod.rs","byte_start":16918,"byte_end":16933,"line_start":15,"line_end":15,"column_start":9,"column_end":24},"alias_span":null,"name":"write_specifier","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":142},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/mod.rs","byte_start":16966,"byte_end":16975,"line_start":18,"line_end":18,"column_start":9,"column_end":18},"alias_span":null,"name":"PopBuffer","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":152},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/mod.rs","byte_start":16985,"byte_end":16995,"line_start":19,"line_end":19,"column_start":9,"column_end":19},"alias_span":null,"name":"PushBuffer","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":173},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/mod.rs","byte_start":17026,"byte_end":17042,"line_start":22,"line_end":22,"column_start":9,"column_end":25},"alias_span":null,"name":"IsU128Compatible","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":170},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/mod.rs","byte_start":17052,"byte_end":17067,"line_start":23,"line_end":23,"column_start":9,"column_end":24},"alias_span":null,"name":"IsU16Compatible","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":171},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/mod.rs","byte_start":17077,"byte_end":17092,"line_start":24,"line_end":24,"column_start":9,"column_end":24},"alias_span":null,"name":"IsU32Compatible","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":172},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/mod.rs","byte_start":17102,"byte_end":17117,"line_start":25,"line_end":25,"column_start":9,"column_end":24},"alias_span":null,"name":"IsU64Compatible","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":169},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/mod.rs","byte_start":17127,"byte_end":17141,"line_start":26,"line_end":26,"column_start":9,"column_end":23},"alias_span":null,"name":"IsU8Compatible","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":165},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/mod.rs","byte_start":17151,"byte_end":17158,"line_start":27,"line_end":27,"column_start":9,"column_end":16},"alias_span":null,"name":"PopBits","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":163},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/mod.rs","byte_start":17168,"byte_end":17176,"line_start":28,"line_end":28,"column_start":9,"column_end":17},"alias_span":null,"name":"PushBits","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":0,"index":167},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/mod.rs","byte_start":17186,"byte_end":17200,"line_start":29,"line_end":29,"column_start":9,"column_end":23},"alias_span":null,"name":"SpecifierBytes","value":"","parent":{"krate":0,"index":18}},{"kind":"Use","ref_id":{"krate":5,"index":340},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":13619,"byte_end":13627,"line_start":429,"line_end":429,"column_start":5,"column_end":13},"alias_span":null,"name":"bitfield","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":341},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":13633,"byte_end":13650,"line_start":430,"line_end":430,"column_start":5,"column_end":22},"alias_span":null,"name":"BitfieldSpecifier","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":5,"index":340},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":13756,"byte_end":13764,"line_start":436,"line_end":436,"column_start":9,"column_end":17},"alias_span":null,"name":"bitfield","value":"","parent":{"krate":0,"index":243}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":13786,"byte_end":13787,"line_start":437,"line_end":437,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":5,"index":341},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":13797,"byte_end":13814,"line_start":438,"line_end":438,"column_start":9,"column_end":26},"alias_span":null,"name":"BitfieldSpecifier","value":"","parent":{"krate":0,"index":243}},{"kind":"Use","ref_id":{"krate":0,"index":255},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":13824,"byte_end":13833,"line_start":439,"line_end":439,"column_start":9,"column_end":18},"alias_span":null,"name":"Specifier","value":"","parent":{"krate":0,"index":243}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":0,"byte_end":15514,"line_start":1,"line_end":496,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":18},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":240},{"krate":0,"index":243},{"krate":0,"index":255},{"krate":0,"index":261}],"decl_id":null,"docs":" Provides macros to support bitfield structs allowing for modular use of bit-enums.","sig":null,"attributes":[{"value":"/ Provides macros to support bitfield structs allowing for modular use of bit-enums.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":0,"byte_end":86,"line_start":1,"line_end":1,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":87,"byte_end":90,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ The mainly provided macros are `#[bitfield]` for structs and","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":91,"byte_end":155,"line_start":3,"line_end":3,"column_start":1,"column_end":65}},{"value":"/ `#[derive(BitfieldSpecifier)]` for enums that shall be usable","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":156,"byte_end":221,"line_start":4,"line_end":4,"column_start":1,"column_end":66}},{"value":"/ within bitfield structs.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":222,"byte_end":250,"line_start":5,"line_end":5,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":251,"byte_end":254,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ There are preset bitfield specifiers such as `B1`, `B2`,..,`B64`","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":255,"byte_end":323,"line_start":7,"line_end":7,"column_start":1,"column_end":69}},{"value":"/ that allow for easy bitfield usage in structs very similar to how","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":324,"byte_end":393,"line_start":8,"line_end":8,"column_start":1,"column_end":70}},{"value":"/ they work in C or C++.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":394,"byte_end":420,"line_start":9,"line_end":9,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":421,"byte_end":424,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ - Performance of the macro generated code is as fast as its hand-written","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":425,"byte_end":501,"line_start":11,"line_end":11,"column_start":1,"column_end":77}},{"value":"/   alternative.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":502,"byte_end":520,"line_start":12,"line_end":12,"column_start":1,"column_end":19}},{"value":"/ - Compile-time checks allow for safe usage of bitfield structs and enums.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":521,"byte_end":598,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":599,"byte_end":602,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":603,"byte_end":606,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ ### Usage","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":607,"byte_end":620,"line_start":16,"line_end":16,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":621,"byte_end":624,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Annotate a Rust struct with the `#[bitfield]` attribute in order to convert it into a bitfield.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":625,"byte_end":724,"line_start":18,"line_end":18,"column_start":1,"column_end":100}},{"value":"/ The `B1`, `B2`, ... `B128` prelude types can be used as primitives to declare the number of bits per field.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":725,"byte_end":836,"line_start":19,"line_end":19,"column_start":1,"column_end":112}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":837,"byte_end":840,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":841,"byte_end":848,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # use modular_bitfield::prelude::*;","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":849,"byte_end":888,"line_start":22,"line_end":22,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":889,"byte_end":894,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"/ #[bitfield]","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":895,"byte_end":910,"line_start":24,"line_end":24,"column_start":1,"column_end":16}},{"value":"/ pub struct PackedData {","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":911,"byte_end":938,"line_start":25,"line_end":25,"column_start":1,"column_end":28}},{"value":"/     header: B4,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":939,"byte_end":958,"line_start":26,"line_end":26,"column_start":1,"column_end":20}},{"value":"/     body: B9,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":959,"byte_end":976,"line_start":27,"line_end":27,"column_start":1,"column_end":18}},{"value":"/     is_alive: B1,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":977,"byte_end":998,"line_start":28,"line_end":28,"column_start":1,"column_end":22}},{"value":"/     status: B2,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":999,"byte_end":1018,"line_start":29,"line_end":29,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":1019,"byte_end":1024,"line_start":30,"line_end":30,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":1025,"byte_end":1032,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":1033,"byte_end":1036,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ This produces a `new` constructor as well as a variety of getters and setters that","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":1037,"byte_end":1123,"line_start":33,"line_end":33,"column_start":1,"column_end":87}},{"value":"/ allows to interact with the bitfield in a safe fashion:","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":1124,"byte_end":1183,"line_start":34,"line_end":34,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":1184,"byte_end":1187,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ #### Example: Constructors","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":1188,"byte_end":1218,"line_start":36,"line_end":36,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":1219,"byte_end":1222,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":1223,"byte_end":1230,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ # use modular_bitfield::prelude::*;","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":1231,"byte_end":1270,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":1271,"byte_end":1276,"line_start":40,"line_end":40,"column_start":1,"column_end":6}},{"value":"/ # #[bitfield]","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":1277,"byte_end":1294,"line_start":41,"line_end":41,"column_start":1,"column_end":18}},{"value":"/ # pub struct PackedData {","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":1295,"byte_end":1324,"line_start":42,"line_end":42,"column_start":1,"column_end":30}},{"value":"/ #     header: B4,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":1325,"byte_end":1346,"line_start":43,"line_end":43,"column_start":1,"column_end":22}},{"value":"/ #     body: B9,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":1347,"byte_end":1366,"line_start":44,"line_end":44,"column_start":1,"column_end":20}},{"value":"/ #     is_alive: B1,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":1367,"byte_end":1390,"line_start":45,"line_end":45,"column_start":1,"column_end":24}},{"value":"/ #     status: B2,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":1391,"byte_end":1412,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"/ # }","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":1413,"byte_end":1420,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/ let data = PackedData::new()","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":1421,"byte_end":1453,"line_start":48,"line_end":48,"column_start":1,"column_end":33}},{"value":"/     .with_header(1)","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":1454,"byte_end":1477,"line_start":49,"line_end":49,"column_start":1,"column_end":24}},{"value":"/     .with_body(2)","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":1478,"byte_end":1499,"line_start":50,"line_end":50,"column_start":1,"column_end":22}},{"value":"/     .with_is_alive(0)","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":1500,"byte_end":1525,"line_start":51,"line_end":51,"column_start":1,"column_end":26}},{"value":"/     .with_status(3);","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":1526,"byte_end":1550,"line_start":52,"line_end":52,"column_start":1,"column_end":25}},{"value":"/ assert_eq!(data.header(), 1);","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":1551,"byte_end":1584,"line_start":53,"line_end":53,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(data.body(), 2);","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":1585,"byte_end":1616,"line_start":54,"line_end":54,"column_start":1,"column_end":32}},{"value":"/ assert_eq!(data.is_alive(), 0);","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":1617,"byte_end":1652,"line_start":55,"line_end":55,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(data.status(), 3);","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":1653,"byte_end":1686,"line_start":56,"line_end":56,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":1687,"byte_end":1694,"line_start":57,"line_end":57,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":1695,"byte_end":1698,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ #### Example: Primitive Types","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":1699,"byte_end":1732,"line_start":59,"line_end":59,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":1733,"byte_end":1736,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ Any type that implements the `Specifier` trait can be used as a bitfield field.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":1737,"byte_end":1820,"line_start":61,"line_end":61,"column_start":1,"column_end":84}},{"value":"/ Besides the already mentioned `B1`, .. `B128` also the `bool`, `u8, `u16, `u32,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":1821,"byte_end":1904,"line_start":62,"line_end":62,"column_start":1,"column_end":84}},{"value":"/ `u64` or `u128` primitive types can be used from prelude.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":1905,"byte_end":1966,"line_start":63,"line_end":63,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":1967,"byte_end":1970,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ We can use this knowledge to encode our `is_alive` as `bool` type instead of `B1`:","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":1971,"byte_end":2057,"line_start":65,"line_end":65,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":2058,"byte_end":2061,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":2062,"byte_end":2069,"line_start":67,"line_end":67,"column_start":1,"column_end":8}},{"value":"/ # use modular_bitfield::prelude::*;","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":2070,"byte_end":2109,"line_start":68,"line_end":68,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":2110,"byte_end":2115,"line_start":69,"line_end":69,"column_start":1,"column_end":6}},{"value":"/ #[bitfield]","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":2116,"byte_end":2131,"line_start":70,"line_end":70,"column_start":1,"column_end":16}},{"value":"/ pub struct PackedData {","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":2132,"byte_end":2159,"line_start":71,"line_end":71,"column_start":1,"column_end":28}},{"value":"/     header: B4,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":2160,"byte_end":2179,"line_start":72,"line_end":72,"column_start":1,"column_end":20}},{"value":"/     body: B9,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":2180,"byte_end":2197,"line_start":73,"line_end":73,"column_start":1,"column_end":18}},{"value":"/     is_alive: bool,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":2198,"byte_end":2221,"line_start":74,"line_end":74,"column_start":1,"column_end":24}},{"value":"/     status: B2,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":2222,"byte_end":2241,"line_start":75,"line_end":75,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":2242,"byte_end":2247,"line_start":76,"line_end":76,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":2248,"byte_end":2251,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"/ let mut data = PackedData::new()","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":2252,"byte_end":2288,"line_start":78,"line_end":78,"column_start":1,"column_end":37}},{"value":"/     .with_is_alive(true);","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":2289,"byte_end":2318,"line_start":79,"line_end":79,"column_start":1,"column_end":30}},{"value":"/ assert!(data.is_alive());","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":2319,"byte_end":2348,"line_start":80,"line_end":80,"column_start":1,"column_end":30}},{"value":"/ data.set_is_alive(false);","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":2349,"byte_end":2378,"line_start":81,"line_end":81,"column_start":1,"column_end":30}},{"value":"/ assert!(!data.is_alive());","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":2379,"byte_end":2409,"line_start":82,"line_end":82,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":2410,"byte_end":2417,"line_start":83,"line_end":83,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":2418,"byte_end":2421,"line_start":84,"line_end":84,"column_start":1,"column_end":4}},{"value":"/ #### Example: Enum Specifiers","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":2422,"byte_end":2455,"line_start":85,"line_end":85,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":2456,"byte_end":2459,"line_start":86,"line_end":86,"column_start":1,"column_end":4}},{"value":"/ It is possible to derive the `Specifier` trait for `enum` types very easily to make","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":2460,"byte_end":2547,"line_start":87,"line_end":87,"column_start":1,"column_end":88}},{"value":"/ them also usable as a field within a bitfield type:","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":2548,"byte_end":2603,"line_start":88,"line_end":88,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":2604,"byte_end":2607,"line_start":89,"line_end":89,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":2608,"byte_end":2615,"line_start":90,"line_end":90,"column_start":1,"column_end":8}},{"value":"/ # use modular_bitfield::prelude::*;","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":2616,"byte_end":2655,"line_start":91,"line_end":91,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":2656,"byte_end":2661,"line_start":92,"line_end":92,"column_start":1,"column_end":6}},{"value":"/ #[derive(BitfieldSpecifier)]","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":2662,"byte_end":2694,"line_start":93,"line_end":93,"column_start":1,"column_end":33}},{"value":"/ pub enum Status {","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":2695,"byte_end":2716,"line_start":94,"line_end":94,"column_start":1,"column_end":22}},{"value":"/     Red, Green, Yellow, None,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":2717,"byte_end":2750,"line_start":95,"line_end":95,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":2751,"byte_end":2756,"line_start":96,"line_end":96,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":2757,"byte_end":2760,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ #[bitfield]","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":2761,"byte_end":2776,"line_start":98,"line_end":98,"column_start":1,"column_end":16}},{"value":"/ pub struct PackedData {","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":2777,"byte_end":2804,"line_start":99,"line_end":99,"column_start":1,"column_end":28}},{"value":"/     header: B4,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":2805,"byte_end":2824,"line_start":100,"line_end":100,"column_start":1,"column_end":20}},{"value":"/     body: B9,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":2825,"byte_end":2842,"line_start":101,"line_end":101,"column_start":1,"column_end":18}},{"value":"/     is_alive: bool,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":2843,"byte_end":2866,"line_start":102,"line_end":102,"column_start":1,"column_end":24}},{"value":"/     status: Status,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":2867,"byte_end":2890,"line_start":103,"line_end":103,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":2891,"byte_end":2896,"line_start":104,"line_end":104,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":2897,"byte_end":2904,"line_start":105,"line_end":105,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":2905,"byte_end":2908,"line_start":106,"line_end":106,"column_start":1,"column_end":4}},{"value":"/ #### Example: Extra Safety Guard","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":2909,"byte_end":2945,"line_start":107,"line_end":107,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":2946,"byte_end":2949,"line_start":108,"line_end":108,"column_start":1,"column_end":4}},{"value":"/ In order to make sure that our `Status` enum still requires exatly 2 bit we can add","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":2950,"byte_end":3037,"line_start":109,"line_end":109,"column_start":1,"column_end":88}},{"value":"/ `#[bits = 2]` to its field:","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":3038,"byte_end":3069,"line_start":110,"line_end":110,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":3070,"byte_end":3073,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":3074,"byte_end":3081,"line_start":112,"line_end":112,"column_start":1,"column_end":8}},{"value":"/ # use modular_bitfield::prelude::*;","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":3082,"byte_end":3121,"line_start":113,"line_end":113,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":3122,"byte_end":3127,"line_start":114,"line_end":114,"column_start":1,"column_end":6}},{"value":"/ # #[derive(BitfieldSpecifier)]","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":3128,"byte_end":3162,"line_start":115,"line_end":115,"column_start":1,"column_end":35}},{"value":"/ # pub enum Status {","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":3163,"byte_end":3186,"line_start":116,"line_end":116,"column_start":1,"column_end":24}},{"value":"/ #     Red, Green, Yellow, None,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":3187,"byte_end":3222,"line_start":117,"line_end":117,"column_start":1,"column_end":36}},{"value":"/ # }","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":3223,"byte_end":3230,"line_start":118,"line_end":118,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":3231,"byte_end":3236,"line_start":119,"line_end":119,"column_start":1,"column_end":6}},{"value":"/ #[bitfield]","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":3237,"byte_end":3252,"line_start":120,"line_end":120,"column_start":1,"column_end":16}},{"value":"/ pub struct PackedData {","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":3253,"byte_end":3280,"line_start":121,"line_end":121,"column_start":1,"column_end":28}},{"value":"/     header: B4,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":3281,"byte_end":3300,"line_start":122,"line_end":122,"column_start":1,"column_end":20}},{"value":"/     body: B9,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":3301,"byte_end":3318,"line_start":123,"line_end":123,"column_start":1,"column_end":18}},{"value":"/     is_alive: bool,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":3319,"byte_end":3342,"line_start":124,"line_end":124,"column_start":1,"column_end":24}},{"value":"/     #[bits = 2]","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":3343,"byte_end":3362,"line_start":125,"line_end":125,"column_start":1,"column_end":20}},{"value":"/     status: Status,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":3363,"byte_end":3386,"line_start":126,"line_end":126,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":3387,"byte_end":3392,"line_start":127,"line_end":127,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":3393,"byte_end":3400,"line_start":128,"line_end":128,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":3401,"byte_end":3404,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ Setting and getting our new `status` field is naturally as follows:","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":3405,"byte_end":3476,"line_start":130,"line_end":130,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":3477,"byte_end":3480,"line_start":131,"line_end":131,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":3481,"byte_end":3488,"line_start":132,"line_end":132,"column_start":1,"column_end":8}},{"value":"/ # use modular_bitfield::prelude::*;","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":3489,"byte_end":3528,"line_start":133,"line_end":133,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":3529,"byte_end":3534,"line_start":134,"line_end":134,"column_start":1,"column_end":6}},{"value":"/ # #[derive(BitfieldSpecifier)]","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":3535,"byte_end":3569,"line_start":135,"line_end":135,"column_start":1,"column_end":35}},{"value":"/ # #[derive(Debug, PartialEq, Eq)]","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":3570,"byte_end":3607,"line_start":136,"line_end":136,"column_start":1,"column_end":38}},{"value":"/ # pub enum Status {","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":3608,"byte_end":3631,"line_start":137,"line_end":137,"column_start":1,"column_end":24}},{"value":"/ #     Red, Green, Yellow, None,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":3632,"byte_end":3667,"line_start":138,"line_end":138,"column_start":1,"column_end":36}},{"value":"/ # }","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":3668,"byte_end":3675,"line_start":139,"line_end":139,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":3676,"byte_end":3681,"line_start":140,"line_end":140,"column_start":1,"column_end":6}},{"value":"/ # #[bitfield]","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":3682,"byte_end":3699,"line_start":141,"line_end":141,"column_start":1,"column_end":18}},{"value":"/ # pub struct PackedData {","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":3700,"byte_end":3729,"line_start":142,"line_end":142,"column_start":1,"column_end":30}},{"value":"/ #     header: B4,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":3730,"byte_end":3751,"line_start":143,"line_end":143,"column_start":1,"column_end":22}},{"value":"/ #     body: B9,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":3752,"byte_end":3771,"line_start":144,"line_end":144,"column_start":1,"column_end":20}},{"value":"/ #     is_alive: bool,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":3772,"byte_end":3797,"line_start":145,"line_end":145,"column_start":1,"column_end":26}},{"value":"/ #     #[bits = 2]","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":3798,"byte_end":3819,"line_start":146,"line_end":146,"column_start":1,"column_end":22}},{"value":"/ #     status: Status,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":3820,"byte_end":3845,"line_start":147,"line_end":147,"column_start":1,"column_end":26}},{"value":"/ # }","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":3846,"byte_end":3853,"line_start":148,"line_end":148,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":3854,"byte_end":3859,"line_start":149,"line_end":149,"column_start":1,"column_end":6}},{"value":"/ let mut data = PackedData::new()","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":3860,"byte_end":3896,"line_start":150,"line_end":150,"column_start":1,"column_end":37}},{"value":"/     .with_status(Status::Green);","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":3897,"byte_end":3933,"line_start":151,"line_end":151,"column_start":1,"column_end":37}},{"value":"/ assert_eq!(data.status(), Status::Green);","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":3934,"byte_end":3979,"line_start":152,"line_end":152,"column_start":1,"column_end":46}},{"value":"/ data.set_status(Status::Red);","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":3980,"byte_end":4013,"line_start":153,"line_end":153,"column_start":1,"column_end":34}},{"value":"/ assert_eq!(data.status(), Status::Red);","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":4014,"byte_end":4057,"line_start":154,"line_end":154,"column_start":1,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":4058,"byte_end":4065,"line_start":155,"line_end":155,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":4066,"byte_end":4069,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ #### Example: Skipping Fields","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":4070,"byte_end":4103,"line_start":157,"line_end":157,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":4104,"byte_end":4107,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ It might make sense to only allow users to set or get information from a field or","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":4108,"byte_end":4193,"line_start":159,"line_end":159,"column_start":1,"column_end":86}},{"value":"/ even to entirely disallow interaction with a bitfield. For this the `#[skip]` attribute","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":4194,"byte_end":4285,"line_start":160,"line_end":160,"column_start":1,"column_end":92}},{"value":"/ can be used on a bitfield of a `#[bitfield]` annotated struct.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":4286,"byte_end":4352,"line_start":161,"line_end":161,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":4353,"byte_end":4356,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":4357,"byte_end":4364,"line_start":163,"line_end":163,"column_start":1,"column_end":8}},{"value":"/ # use modular_bitfield::prelude::*;","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":4365,"byte_end":4404,"line_start":164,"line_end":164,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":4405,"byte_end":4410,"line_start":165,"line_end":165,"column_start":1,"column_end":6}},{"value":"/ #[bitfield]","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":4411,"byte_end":4426,"line_start":166,"line_end":166,"column_start":1,"column_end":16}},{"value":"/ pub struct SomeBitsUndefined {","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":4427,"byte_end":4461,"line_start":167,"line_end":167,"column_start":1,"column_end":35}},{"value":"/     #[skip(setters)]","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":4462,"byte_end":4486,"line_start":168,"line_end":168,"column_start":1,"column_end":25}},{"value":"/     read_only: bool,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":4487,"byte_end":4511,"line_start":169,"line_end":169,"column_start":1,"column_end":25}},{"value":"/     #[skip(getters)]","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":4512,"byte_end":4536,"line_start":170,"line_end":170,"column_start":1,"column_end":25}},{"value":"/     write_only: bool,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":4537,"byte_end":4562,"line_start":171,"line_end":171,"column_start":1,"column_end":26}},{"value":"/     #[skip]","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":4563,"byte_end":4578,"line_start":172,"line_end":172,"column_start":1,"column_end":16}},{"value":"/     unused: B6,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":4579,"byte_end":4598,"line_start":173,"line_end":173,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":4599,"byte_end":4604,"line_start":174,"line_end":174,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":4605,"byte_end":4612,"line_start":175,"line_end":175,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":4613,"byte_end":4616,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ It is possible to use `#[skip(getters, setters)]` or `#[skip(getters)]` followed by a `#[skip(setters)]`","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":4617,"byte_end":4725,"line_start":177,"line_end":177,"column_start":1,"column_end":109}},{"value":"/ attribute applied on the same bitfield. The effects are the same. When skipping both, getters and setters,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":4726,"byte_end":4836,"line_start":178,"line_end":178,"column_start":1,"column_end":111}},{"value":"/ it is possible to completely avoid having to specify a name:","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":4837,"byte_end":4901,"line_start":179,"line_end":179,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":4902,"byte_end":4905,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":4906,"byte_end":4913,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"/ # use modular_bitfield::prelude::*;","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":4914,"byte_end":4953,"line_start":182,"line_end":182,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":4954,"byte_end":4959,"line_start":183,"line_end":183,"column_start":1,"column_end":6}},{"value":"/ #[bitfield]","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":4960,"byte_end":4975,"line_start":184,"line_end":184,"column_start":1,"column_end":16}},{"value":"/ pub struct SomeBitsUndefined {","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":4976,"byte_end":5010,"line_start":185,"line_end":185,"column_start":1,"column_end":35}},{"value":"/     #[skip] __: B2,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":5011,"byte_end":5034,"line_start":186,"line_end":186,"column_start":1,"column_end":24}},{"value":"/     is_activ: bool,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":5035,"byte_end":5058,"line_start":187,"line_end":187,"column_start":1,"column_end":24}},{"value":"/     #[skip] __: B2,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":5059,"byte_end":5082,"line_start":188,"line_end":188,"column_start":1,"column_end":24}},{"value":"/     is_received: bool,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":5083,"byte_end":5109,"line_start":189,"line_end":189,"column_start":1,"column_end":27}},{"value":"/     #[skip] __: B2,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":5110,"byte_end":5133,"line_start":190,"line_end":190,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":5134,"byte_end":5139,"line_start":191,"line_end":191,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":5140,"byte_end":5147,"line_start":192,"line_end":192,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":5148,"byte_end":5151,"line_start":193,"line_end":193,"column_start":1,"column_end":4}},{"value":"/ #### Example: Unfilled Bitfields","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":5152,"byte_end":5188,"line_start":194,"line_end":194,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":5189,"byte_end":5192,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ Sometimes it might be useful to not be required to construct a bitfield that defines","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":5193,"byte_end":5281,"line_start":196,"line_end":196,"column_start":1,"column_end":89}},{"value":"/ all bits and therefore is required to have a bit width divisible by 8. In this case","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":5282,"byte_end":5369,"line_start":197,"line_end":197,"column_start":1,"column_end":88}},{"value":"/ you can use the `filled: bool` parameter of the `#[bitfield]` macro in order to toggle","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":5370,"byte_end":5460,"line_start":198,"line_end":198,"column_start":1,"column_end":91}},{"value":"/ this for your respective bitfield:","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":5461,"byte_end":5499,"line_start":199,"line_end":199,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":5500,"byte_end":5503,"line_start":200,"line_end":200,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":5504,"byte_end":5511,"line_start":201,"line_end":201,"column_start":1,"column_end":8}},{"value":"/ # use modular_bitfield::prelude::*;","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":5512,"byte_end":5551,"line_start":202,"line_end":202,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":5552,"byte_end":5557,"line_start":203,"line_end":203,"column_start":1,"column_end":6}},{"value":"/ #[bitfield(filled = false)]","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":5558,"byte_end":5589,"line_start":204,"line_end":204,"column_start":1,"column_end":32}},{"value":"/ pub struct SomeBitsUndefined {","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":5590,"byte_end":5624,"line_start":205,"line_end":205,"column_start":1,"column_end":35}},{"value":"/     is_compact: bool,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":5625,"byte_end":5650,"line_start":206,"line_end":206,"column_start":1,"column_end":26}},{"value":"/     is_secure: bool,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":5651,"byte_end":5675,"line_start":207,"line_end":207,"column_start":1,"column_end":25}},{"value":"/     pre_status: B3,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":5676,"byte_end":5699,"line_start":208,"line_end":208,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":5700,"byte_end":5705,"line_start":209,"line_end":209,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":5706,"byte_end":5713,"line_start":210,"line_end":210,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":5714,"byte_end":5717,"line_start":211,"line_end":211,"column_start":1,"column_end":4}},{"value":"/ In the above example `SomeBitsUndefined` only defines the first 5 bits and leaves the rest","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":5718,"byte_end":5812,"line_start":212,"line_end":212,"column_start":1,"column_end":95}},{"value":"/ 3 bits of its entire 8 bits undefined. The consequences are that its generated `from_bytes`","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":5813,"byte_end":5908,"line_start":213,"line_end":213,"column_start":1,"column_end":96}},{"value":"/ method is fallible since it must guard against those undefined bits.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":5909,"byte_end":5981,"line_start":214,"line_end":214,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":5982,"byte_end":5985,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ #### Example: Recursive Bitfields","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":5986,"byte_end":6023,"line_start":216,"line_end":216,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":6024,"byte_end":6027,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ It is possible to use `#[bitfield]` structs as fields of `#[bitfield]` structs.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":6028,"byte_end":6111,"line_start":218,"line_end":218,"column_start":1,"column_end":84}},{"value":"/ This is generally useful if there are some common fields for multiple bitfields","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":6112,"byte_end":6195,"line_start":219,"line_end":219,"column_start":1,"column_end":84}},{"value":"/ and is achieved by adding the `#[derive(BitfieldSpecifier)]` attribute to the struct","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":6196,"byte_end":6284,"line_start":220,"line_end":220,"column_start":1,"column_end":89}},{"value":"/ annotated with `#[bitfield]`:","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":6285,"byte_end":6318,"line_start":221,"line_end":221,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":6319,"byte_end":6322,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":6323,"byte_end":6330,"line_start":223,"line_end":223,"column_start":1,"column_end":8}},{"value":"/ # use modular_bitfield::prelude::*;","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":6331,"byte_end":6370,"line_start":224,"line_end":224,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":6371,"byte_end":6376,"line_start":225,"line_end":225,"column_start":1,"column_end":6}},{"value":"/ # #[derive(BitfieldSpecifier)]","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":6377,"byte_end":6411,"line_start":226,"line_end":226,"column_start":1,"column_end":35}},{"value":"/ # pub enum Status {","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":6412,"byte_end":6435,"line_start":227,"line_end":227,"column_start":1,"column_end":24}},{"value":"/ #     Red, Green, Yellow, None,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":6436,"byte_end":6471,"line_start":228,"line_end":228,"column_start":1,"column_end":36}},{"value":"/ # }","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":6472,"byte_end":6479,"line_start":229,"line_end":229,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":6480,"byte_end":6485,"line_start":230,"line_end":230,"column_start":1,"column_end":6}},{"value":"/ #[bitfield(filled = false)]","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":6486,"byte_end":6517,"line_start":231,"line_end":231,"column_start":1,"column_end":32}},{"value":"/ #[derive(BitfieldSpecifier)]","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":6518,"byte_end":6550,"line_start":232,"line_end":232,"column_start":1,"column_end":33}},{"value":"/ pub struct Header {","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":6551,"byte_end":6574,"line_start":233,"line_end":233,"column_start":1,"column_end":24}},{"value":"/     is_compact: bool,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":6575,"byte_end":6600,"line_start":234,"line_end":234,"column_start":1,"column_end":26}},{"value":"/     is_secure: bool,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":6601,"byte_end":6625,"line_start":235,"line_end":235,"column_start":1,"column_end":25}},{"value":"/     pre_status: Status,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":6626,"byte_end":6653,"line_start":236,"line_end":236,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":6654,"byte_end":6659,"line_start":237,"line_end":237,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":6660,"byte_end":6663,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ #[bitfield]","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":6664,"byte_end":6679,"line_start":239,"line_end":239,"column_start":1,"column_end":16}},{"value":"/ pub struct PackedData {","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":6680,"byte_end":6707,"line_start":240,"line_end":240,"column_start":1,"column_end":28}},{"value":"/     header: Header,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":6708,"byte_end":6731,"line_start":241,"line_end":241,"column_start":1,"column_end":24}},{"value":"/     body: B9,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":6732,"byte_end":6749,"line_start":242,"line_end":242,"column_start":1,"column_end":18}},{"value":"/     is_alive: bool,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":6750,"byte_end":6773,"line_start":243,"line_end":243,"column_start":1,"column_end":24}},{"value":"/     status: Status,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":6774,"byte_end":6797,"line_start":244,"line_end":244,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":6798,"byte_end":6803,"line_start":245,"line_end":245,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":6804,"byte_end":6811,"line_start":246,"line_end":246,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":6812,"byte_end":6815,"line_start":247,"line_end":247,"column_start":1,"column_end":4}},{"value":"/ With the `bits: int` parameter of the `#[bitfield]` macro on the `Header` struct and the","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":6816,"byte_end":6908,"line_start":248,"line_end":248,"column_start":1,"column_end":93}},{"value":"/ `#[bits: int]` attribute of the `#[derive(BitfieldSpecifier)]` on the `Status` enum we","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":6909,"byte_end":6999,"line_start":249,"line_end":249,"column_start":1,"column_end":91}},{"value":"/ can have additional compile-time guarantees about the bit widths of the resulting entities:","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":7000,"byte_end":7095,"line_start":250,"line_end":250,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":7096,"byte_end":7099,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":7100,"byte_end":7107,"line_start":252,"line_end":252,"column_start":1,"column_end":8}},{"value":"/ # use modular_bitfield::prelude::*;","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":7108,"byte_end":7147,"line_start":253,"line_end":253,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":7148,"byte_end":7153,"line_start":254,"line_end":254,"column_start":1,"column_end":6}},{"value":"/ #[derive(BitfieldSpecifier)]","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":7154,"byte_end":7186,"line_start":255,"line_end":255,"column_start":1,"column_end":33}},{"value":"/ #[bits = 2]","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":7187,"byte_end":7202,"line_start":256,"line_end":256,"column_start":1,"column_end":16}},{"value":"/ pub enum Status {","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":7203,"byte_end":7224,"line_start":257,"line_end":257,"column_start":1,"column_end":22}},{"value":"/     Red, Green, Yellow, None,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":7225,"byte_end":7258,"line_start":258,"line_end":258,"column_start":1,"column_end":34}},{"value":"/ }","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":7259,"byte_end":7264,"line_start":259,"line_end":259,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":7265,"byte_end":7268,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ #[bitfield(bits = 4)]","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":7269,"byte_end":7294,"line_start":261,"line_end":261,"column_start":1,"column_end":26}},{"value":"/ #[derive(BitfieldSpecifier)]","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":7295,"byte_end":7327,"line_start":262,"line_end":262,"column_start":1,"column_end":33}},{"value":"/ pub struct Header {","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":7328,"byte_end":7351,"line_start":263,"line_end":263,"column_start":1,"column_end":24}},{"value":"/     is_compact: bool,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":7352,"byte_end":7377,"line_start":264,"line_end":264,"column_start":1,"column_end":26}},{"value":"/     is_secure: bool,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":7378,"byte_end":7402,"line_start":265,"line_end":265,"column_start":1,"column_end":25}},{"value":"/     #[bits = 2]","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":7403,"byte_end":7422,"line_start":266,"line_end":266,"column_start":1,"column_end":20}},{"value":"/     pre_status: Status,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":7423,"byte_end":7450,"line_start":267,"line_end":267,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":7451,"byte_end":7456,"line_start":268,"line_end":268,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":7457,"byte_end":7460,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ #[bitfield(bits = 16)]","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":7461,"byte_end":7487,"line_start":270,"line_end":270,"column_start":1,"column_end":27}},{"value":"/ pub struct PackedData {","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":7488,"byte_end":7515,"line_start":271,"line_end":271,"column_start":1,"column_end":28}},{"value":"/     #[bits = 4]","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":7516,"byte_end":7535,"line_start":272,"line_end":272,"column_start":1,"column_end":20}},{"value":"/     header: Header,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":7536,"byte_end":7559,"line_start":273,"line_end":273,"column_start":1,"column_end":24}},{"value":"/     body: B9,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":7560,"byte_end":7577,"line_start":274,"line_end":274,"column_start":1,"column_end":18}},{"value":"/     is_alive: bool,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":7578,"byte_end":7601,"line_start":275,"line_end":275,"column_start":1,"column_end":24}},{"value":"/     #[bits = 2]","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":7602,"byte_end":7621,"line_start":276,"line_end":276,"column_start":1,"column_end":20}},{"value":"/     status: Status,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":7622,"byte_end":7645,"line_start":277,"line_end":277,"column_start":1,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":7646,"byte_end":7651,"line_start":278,"line_end":278,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":7652,"byte_end":7659,"line_start":279,"line_end":279,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":7660,"byte_end":7663,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ #### Example: Advanced Enum Specifiers","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":7664,"byte_end":7706,"line_start":281,"line_end":281,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":7707,"byte_end":7710,"line_start":282,"line_end":282,"column_start":1,"column_end":4}},{"value":"/ For our `Status` enum we actually just need 3 status variants: `Green`, `Yellow` and `Red`.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":7711,"byte_end":7806,"line_start":283,"line_end":283,"column_start":1,"column_end":96}},{"value":"/ We introduced the `None` status variants because `Specifier` enums by default are required","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":7807,"byte_end":7901,"line_start":284,"line_end":284,"column_start":1,"column_end":95}},{"value":"/ to have a number of variants that is a power of two. We can ship around this by specifying","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":7902,"byte_end":7996,"line_start":285,"line_end":285,"column_start":1,"column_end":95}},{"value":"/ `#[bits = 2]` on the top and get rid of our placeholder `None` variant while maintaining","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":7997,"byte_end":8089,"line_start":286,"line_end":286,"column_start":1,"column_end":93}},{"value":"/ the invariant of it requiring 2 bits:","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":8090,"byte_end":8131,"line_start":287,"line_end":287,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":8132,"byte_end":8135,"line_start":288,"line_end":288,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":8136,"byte_end":8143,"line_start":289,"line_end":289,"column_start":1,"column_end":8}},{"value":"/ # use modular_bitfield::prelude::*;","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":8144,"byte_end":8183,"line_start":290,"line_end":290,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":8184,"byte_end":8187,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"/ #[derive(BitfieldSpecifier)]","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":8188,"byte_end":8220,"line_start":292,"line_end":292,"column_start":1,"column_end":33}},{"value":"/ #[bits = 2]","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":8221,"byte_end":8236,"line_start":293,"line_end":293,"column_start":1,"column_end":16}},{"value":"/ pub enum Status {","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":8237,"byte_end":8258,"line_start":294,"line_end":294,"column_start":1,"column_end":22}},{"value":"/     Red, Green, Yellow,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":8259,"byte_end":8286,"line_start":295,"line_end":295,"column_start":1,"column_end":28}},{"value":"/ }","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":8287,"byte_end":8292,"line_start":296,"line_end":296,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":8293,"byte_end":8300,"line_start":297,"line_end":297,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":8301,"byte_end":8304,"line_start":298,"line_end":298,"column_start":1,"column_end":4}},{"value":"/ However, having such enums now yields the possibility that a bitfield might contain invalid bit","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":8305,"byte_end":8404,"line_start":299,"line_end":299,"column_start":1,"column_end":100}},{"value":"/ patterns for such fields. We can safely access those fields with protected getters. For the sake","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":8405,"byte_end":8505,"line_start":300,"line_end":300,"column_start":1,"column_end":101}},{"value":"/ of demonstration we will use the generated `from_bytes` constructor with which we can easily","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":8506,"byte_end":8602,"line_start":301,"line_end":301,"column_start":1,"column_end":97}},{"value":"/ construct bitfields that may contain invalid bit patterns:","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":8603,"byte_end":8665,"line_start":302,"line_end":302,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":8666,"byte_end":8669,"line_start":303,"line_end":303,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":8670,"byte_end":8677,"line_start":304,"line_end":304,"column_start":1,"column_end":8}},{"value":"/ # use modular_bitfield::prelude::*;","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":8678,"byte_end":8717,"line_start":305,"line_end":305,"column_start":1,"column_end":40}},{"value":"/ # use modular_bitfield::error::InvalidBitPattern;","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":8718,"byte_end":8771,"line_start":306,"line_end":306,"column_start":1,"column_end":54}},{"value":"/ #","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":8772,"byte_end":8777,"line_start":307,"line_end":307,"column_start":1,"column_end":6}},{"value":"/ # #[derive(BitfieldSpecifier)]","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":8778,"byte_end":8812,"line_start":308,"line_end":308,"column_start":1,"column_end":35}},{"value":"/ # #[derive(Debug, PartialEq, Eq)]","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":8813,"byte_end":8850,"line_start":309,"line_end":309,"column_start":1,"column_end":38}},{"value":"/ # #[bits = 2]","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":8851,"byte_end":8868,"line_start":310,"line_end":310,"column_start":1,"column_end":18}},{"value":"/ # pub enum Status {","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":8869,"byte_end":8892,"line_start":311,"line_end":311,"column_start":1,"column_end":24}},{"value":"/ #     Red, Green, Yellow,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":8893,"byte_end":8922,"line_start":312,"line_end":312,"column_start":1,"column_end":30}},{"value":"/ # }","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":8923,"byte_end":8930,"line_start":313,"line_end":313,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":8931,"byte_end":8936,"line_start":314,"line_end":314,"column_start":1,"column_end":6}},{"value":"/ # #[bitfield(filled = false)]","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":8937,"byte_end":8970,"line_start":315,"line_end":315,"column_start":1,"column_end":34}},{"value":"/ # #[derive(BitfieldSpecifier)]","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":8971,"byte_end":9005,"line_start":316,"line_end":316,"column_start":1,"column_end":35}},{"value":"/ # pub struct Header {","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":9006,"byte_end":9031,"line_start":317,"line_end":317,"column_start":1,"column_end":26}},{"value":"/ #     is_compact: bool,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":9032,"byte_end":9059,"line_start":318,"line_end":318,"column_start":1,"column_end":28}},{"value":"/ #     is_secure: bool,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":9060,"byte_end":9086,"line_start":319,"line_end":319,"column_start":1,"column_end":27}},{"value":"/ #     pre_status: Status,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":9087,"byte_end":9116,"line_start":320,"line_end":320,"column_start":1,"column_end":30}},{"value":"/ # }","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":9117,"byte_end":9124,"line_start":321,"line_end":321,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":9125,"byte_end":9130,"line_start":322,"line_end":322,"column_start":1,"column_end":6}},{"value":"/ # #[bitfield]","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":9131,"byte_end":9148,"line_start":323,"line_end":323,"column_start":1,"column_end":18}},{"value":"/ # pub struct PackedData {","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":9149,"byte_end":9178,"line_start":324,"line_end":324,"column_start":1,"column_end":30}},{"value":"/ #     header: Header,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":9179,"byte_end":9204,"line_start":325,"line_end":325,"column_start":1,"column_end":26}},{"value":"/ #     body: B9,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":9205,"byte_end":9224,"line_start":326,"line_end":326,"column_start":1,"column_end":20}},{"value":"/ #     is_alive: bool,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":9225,"byte_end":9250,"line_start":327,"line_end":327,"column_start":1,"column_end":26}},{"value":"/ #     status: Status,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":9251,"byte_end":9276,"line_start":328,"line_end":328,"column_start":1,"column_end":26}},{"value":"/ # }","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":9277,"byte_end":9284,"line_start":329,"line_end":329,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":9285,"byte_end":9290,"line_start":330,"line_end":330,"column_start":1,"column_end":6}},{"value":"/ let mut data = PackedData::from_bytes([0b0000_0000, 0b1100_0000]);","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":9291,"byte_end":9361,"line_start":331,"line_end":331,"column_start":1,"column_end":71}},{"value":"/ //           The 2 status field bits are invalid -----^^","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":9362,"byte_end":9422,"line_start":332,"line_end":332,"column_start":1,"column_end":61}},{"value":"/ //           as Red = 0x00, Green = 0x01 and Yellow = 0x10","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":9423,"byte_end":9485,"line_start":333,"line_end":333,"column_start":1,"column_end":63}},{"value":"/ assert_eq!(data.status_or_err(), Err(InvalidBitPattern { invalid_bytes: 0b11 }));","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":9486,"byte_end":9571,"line_start":334,"line_end":334,"column_start":1,"column_end":86}},{"value":"/ data.set_status(Status::Green);","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":9572,"byte_end":9607,"line_start":335,"line_end":335,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(data.status_or_err(), Ok(Status::Green));","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":9608,"byte_end":9664,"line_start":336,"line_end":336,"column_start":1,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":9665,"byte_end":9672,"line_start":337,"line_end":337,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":9673,"byte_end":9676,"line_start":338,"line_end":338,"column_start":1,"column_end":4}},{"value":"/ ## Generated Implementations","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":9677,"byte_end":9709,"line_start":339,"line_end":339,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":9710,"byte_end":9713,"line_start":340,"line_end":340,"column_start":1,"column_end":4}},{"value":"/ For the example `#[bitfield]` struct the following implementations are going to be generated:","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":9714,"byte_end":9811,"line_start":341,"line_end":341,"column_start":1,"column_end":98}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":9812,"byte_end":9815,"line_start":342,"line_end":342,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":9816,"byte_end":9823,"line_start":343,"line_end":343,"column_start":1,"column_end":8}},{"value":"/ # use modular_bitfield::prelude::*;","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":9824,"byte_end":9863,"line_start":344,"line_end":344,"column_start":1,"column_end":40}},{"value":"/ #","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":9864,"byte_end":9869,"line_start":345,"line_end":345,"column_start":1,"column_end":6}},{"value":"/ #[bitfield]","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":9870,"byte_end":9885,"line_start":346,"line_end":346,"column_start":1,"column_end":16}},{"value":"/ pub struct Example {","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":9886,"byte_end":9910,"line_start":347,"line_end":347,"column_start":1,"column_end":25}},{"value":"/     a: bool,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":9911,"byte_end":9927,"line_start":348,"line_end":348,"column_start":1,"column_end":17}},{"value":"/     b: B7,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":9928,"byte_end":9942,"line_start":349,"line_end":349,"column_start":1,"column_end":15}},{"value":"/ }","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":9943,"byte_end":9948,"line_start":350,"line_end":350,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":9949,"byte_end":9956,"line_start":351,"line_end":351,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":9957,"byte_end":9960,"line_start":352,"line_end":352,"column_start":1,"column_end":4}},{"value":"/ | Signature | Description |","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":9961,"byte_end":9992,"line_start":353,"line_end":353,"column_start":1,"column_end":32}},{"value":"/ |:--|:--|","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":9993,"byte_end":10006,"line_start":354,"line_end":354,"column_start":1,"column_end":14}},{"value":"/ | `fn new() -> Self` | Creates a new instance of the bitfield with all bits initialized to 0. |","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":10007,"byte_end":10106,"line_start":355,"line_end":355,"column_start":1,"column_end":100}},{"value":"/ | `fn from_bytes([u8; 1]) -> Self` | Creates a new instance of the bitfield from the given raw bytes. |","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":10107,"byte_end":10214,"line_start":356,"line_end":356,"column_start":1,"column_end":108}},{"value":"/ | `fn into_bytes(self) -> [u8; 1]` | Returns the underlying bytes of the bitfield. |","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":10215,"byte_end":10303,"line_start":357,"line_end":357,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":10304,"byte_end":10307,"line_start":358,"line_end":358,"column_start":1,"column_end":4}},{"value":"/ And below the generated signatures for field `a`:","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":10308,"byte_end":10361,"line_start":359,"line_end":359,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":10362,"byte_end":10365,"line_start":360,"line_end":360,"column_start":1,"column_end":4}},{"value":"/ | Signature | Description |","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":10366,"byte_end":10397,"line_start":361,"line_end":361,"column_start":1,"column_end":32}},{"value":"/ |:--|:--|","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":10398,"byte_end":10411,"line_start":362,"line_end":362,"column_start":1,"column_end":14}},{"value":"/ | `fn a() -> bool` | Returns the value of `a` or panics if invalid. |","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":10412,"byte_end":10485,"line_start":363,"line_end":363,"column_start":1,"column_end":74}},{"value":"/ | `fn a_or_err() -> Result<bool, InvalidBitPattern<u8>>` | Returns the value of `a` of an error providing information about the invalid bits. |","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":10486,"byte_end":10633,"line_start":364,"line_end":364,"column_start":1,"column_end":148}},{"value":"/ | `fn set_a(&mut self, new_value: bool)` | Sets `a` to the new value or panics if `new_value` contains invalid bits. |","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":10634,"byte_end":10756,"line_start":365,"line_end":365,"column_start":1,"column_end":123}},{"value":"/ | `fn set_a_checked(&mut self, new_value: bool) -> Result<(), OutOfBounds>` | Sets `a` to the new value of returns an out of bounds error. |","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":10757,"byte_end":10901,"line_start":366,"line_end":366,"column_start":1,"column_end":145}},{"value":"/ | `fn with_a(self, new_value: bool) -> Self` | Similar to `set_a` but useful for method chaining. |","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":10902,"byte_end":11005,"line_start":367,"line_end":367,"column_start":1,"column_end":104}},{"value":"/ | `fn with_a_checked(self, new_value: bool) -> Result<Self, OutOfBounds>` | Similar to `set_a_checked` but useful for method chaining. |","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":11006,"byte_end":11146,"line_start":368,"line_end":368,"column_start":1,"column_end":141}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":11147,"byte_end":11150,"line_start":369,"line_end":369,"column_start":1,"column_end":4}},{"value":"/ ## Generated Structure","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":11151,"byte_end":11177,"line_start":370,"line_end":370,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":11178,"byte_end":11181,"line_start":371,"line_end":371,"column_start":1,"column_end":4}},{"value":"/ From David Tolnay's procedural macro workshop:","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":11182,"byte_end":11232,"line_start":372,"line_end":372,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":11233,"byte_end":11236,"line_start":373,"line_end":373,"column_start":1,"column_end":4}},{"value":"/ The macro conceptualizes given structs as a sequence of bits 0..N.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":11237,"byte_end":11307,"line_start":374,"line_end":374,"column_start":1,"column_end":71}},{"value":"/ The bits are grouped into fields in the order specified by the struct written by the user.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":11308,"byte_end":11402,"line_start":375,"line_end":375,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":11403,"byte_end":11406,"line_start":376,"line_end":376,"column_start":1,"column_end":4}},{"value":"/ The `#[bitfield]` attribute rewrites the caller's struct into a private byte array representation","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":11407,"byte_end":11508,"line_start":377,"line_end":377,"column_start":1,"column_end":102}},{"value":"/ with public getter and setter methods for each field.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":11509,"byte_end":11566,"line_start":378,"line_end":378,"column_start":1,"column_end":58}},{"value":"/ The total number of bits N is required to be a multiple of 8: This is checked at compile time.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":11567,"byte_end":11665,"line_start":379,"line_end":379,"column_start":1,"column_end":99}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":11666,"byte_end":11669,"line_start":380,"line_end":380,"column_start":1,"column_end":4}},{"value":"/ ### Example","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":11670,"byte_end":11685,"line_start":381,"line_end":381,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":11686,"byte_end":11689,"line_start":382,"line_end":382,"column_start":1,"column_end":4}},{"value":"/ The following invocation builds a struct with a total size of 32 bits or 4 bytes.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":11690,"byte_end":11775,"line_start":383,"line_end":383,"column_start":1,"column_end":86}},{"value":"/ It places field `a` in the least significant bit of the first byte,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":11776,"byte_end":11847,"line_start":384,"line_end":384,"column_start":1,"column_end":72}},{"value":"/ field `b` in the next three least significant bits,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":11848,"byte_end":11903,"line_start":385,"line_end":385,"column_start":1,"column_end":56}},{"value":"/ field `c` in the remaining four most significant bits of the first byte,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":11904,"byte_end":11980,"line_start":386,"line_end":386,"column_start":1,"column_end":77}},{"value":"/ and field `d` spanning the next three bytes.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":11981,"byte_end":12029,"line_start":387,"line_end":387,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":12030,"byte_end":12033,"line_start":388,"line_end":388,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":12034,"byte_end":12045,"line_start":389,"line_end":389,"column_start":1,"column_end":12}},{"value":"/ use modular_bitfield::prelude::*;","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":12046,"byte_end":12083,"line_start":390,"line_end":390,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":12084,"byte_end":12087,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/ #[bitfield]","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":12088,"byte_end":12103,"line_start":392,"line_end":392,"column_start":1,"column_end":16}},{"value":"/ pub struct MyFourBytes {","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":12104,"byte_end":12132,"line_start":393,"line_end":393,"column_start":1,"column_end":29}},{"value":"/     a: B1,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":12133,"byte_end":12147,"line_start":394,"line_end":394,"column_start":1,"column_end":15}},{"value":"/     b: B3,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":12148,"byte_end":12162,"line_start":395,"line_end":395,"column_start":1,"column_end":15}},{"value":"/     c: B4,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":12163,"byte_end":12177,"line_start":396,"line_end":396,"column_start":1,"column_end":15}},{"value":"/     d: B24,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":12178,"byte_end":12193,"line_start":397,"line_end":397,"column_start":1,"column_end":16}},{"value":"/ }","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":12194,"byte_end":12199,"line_start":398,"line_end":398,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":12200,"byte_end":12207,"line_start":399,"line_end":399,"column_start":1,"column_end":8}},{"value":"/ ```no_compile","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":12208,"byte_end":12225,"line_start":400,"line_end":400,"column_start":1,"column_end":18}},{"value":"/                                least significant bit of third byte","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":12226,"byte_end":12296,"line_start":401,"line_end":401,"column_start":1,"column_end":71}},{"value":"/                                  ┊           most significant","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":12297,"byte_end":12364,"line_start":402,"line_end":402,"column_start":1,"column_end":66}},{"value":"/                                  ┊             ┊","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":12365,"byte_end":12421,"line_start":403,"line_end":403,"column_start":1,"column_end":53}},{"value":"/                                  ┊             ┊","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":12422,"byte_end":12478,"line_start":404,"line_end":404,"column_start":1,"column_end":53}},{"value":"/ ║  first byte   ║  second byte  ║  third byte   ║  fourth byte  ║","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":12479,"byte_end":12558,"line_start":405,"line_end":405,"column_start":1,"column_end":70}},{"value":"/ ╟───────────────╫───────────────╫───────────────╫───────────────╢","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":12559,"byte_end":12758,"line_start":406,"line_end":406,"column_start":1,"column_end":70}},{"value":"/ ║▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒ ▒║","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":12759,"byte_end":12896,"line_start":407,"line_end":407,"column_start":1,"column_end":70}},{"value":"/ ╟─╫─────╫───────╫───────────────────────────────────────────────╢","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":12897,"byte_end":13096,"line_start":408,"line_end":408,"column_start":1,"column_end":70}},{"value":"/ ║a║  b  ║   c   ║                       d                       ║","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":13097,"byte_end":13176,"line_start":409,"line_end":409,"column_start":1,"column_end":70}},{"value":"/                  ┊                                             ┊","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":13177,"byte_end":13249,"line_start":410,"line_end":410,"column_start":1,"column_end":69}},{"value":"/                  ┊                                             ┊","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":13250,"byte_end":13322,"line_start":411,"line_end":411,"column_start":1,"column_end":69}},{"value":"/                least significant bit of d         most significant","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":13323,"byte_end":13393,"line_start":412,"line_end":412,"column_start":1,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":13394,"byte_end":13401,"line_start":413,"line_end":413,"column_start":1,"column_end":8}},{"value":"no_std","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":13403,"byte_end":13413,"line_start":415,"line_end":415,"column_start":1,"column_end":11}},{"value":"forbid(unsafe_code)","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":13414,"byte_end":13437,"line_start":416,"line_end":416,"column_start":1,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":5},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/error.rs","parent":null,"children":[{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":262},{"krate":0,"index":264},{"krate":0,"index":266},{"krate":0,"index":267},{"krate":0,"index":269},{"krate":0,"index":270},{"krate":0,"index":9},{"krate":0,"index":272},{"krate":0,"index":275},{"krate":0,"index":278},{"krate":0,"index":280},{"krate":0,"index":284},{"krate":0,"index":286},{"krate":0,"index":11},{"krate":0,"index":14}],"decl_id":null,"docs":" Errors that can occure while operating on modular bitfields.\n","sig":null,"attributes":[{"value":"/ Errors that can occure while operating on modular bitfields.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/error.rs","byte_start":15516,"byte_end":15580,"line_start":1,"line_end":1,"column_start":1,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":262},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/error.rs","byte_start":15703,"byte_end":15714,"line_start":7,"line_end":7,"column_start":12,"column_end":23},"name":"OutOfBounds","qualname":"::error::OutOfBounds","value":"","parent":null,"children":[],"decl_id":null,"docs":" The given value was out of range for the bitfield.\n","sig":null,"attributes":[{"value":"/ The given value was out of range for the bitfield.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/error.rs","byte_start":15605,"byte_end":15659,"line_start":5,"line_end":5,"column_start":1,"column_end":55}}]},{"kind":"Struct","id":{"krate":0,"index":272},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/error.rs","byte_start":15989,"byte_end":16006,"line_start":17,"line_end":17,"column_start":12,"column_end":29},"name":"InvalidBitPattern","qualname":"::error::InvalidBitPattern","value":"InvalidBitPattern { invalid_bytes }","parent":null,"children":[{"krate":0,"index":274}],"decl_id":null,"docs":" The bitfield contained an invalid bit pattern.\n","sig":null,"attributes":[{"value":"/ The bitfield contained an invalid bit pattern.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/error.rs","byte_start":15895,"byte_end":15945,"line_start":15,"line_end":15,"column_start":1,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":274},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/error.rs","byte_start":16024,"byte_end":16037,"line_start":18,"line_end":18,"column_start":9,"column_end":22},"name":"invalid_bytes","qualname":"::error::InvalidBitPattern::invalid_bytes","value":"Bytes","parent":{"krate":0,"index":272},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/error.rs","byte_start":16457,"byte_end":16460,"line_start":37,"line_end":37,"column_start":12,"column_end":15},"name":"new","qualname":"<InvalidBitPattern<Bytes>>::new","value":"pub fn new(Bytes) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new invalid bit pattern error.\n","sig":null,"attributes":[{"value":"/ Creates a new invalid bit pattern error.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/error.rs","byte_start":16387,"byte_end":16431,"line_start":35,"line_end":35,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/error.rs","byte_start":16436,"byte_end":16445,"line_start":36,"line_end":36,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/error.rs","byte_start":16597,"byte_end":16610,"line_start":43,"line_end":43,"column_start":12,"column_end":25},"name":"invalid_bytes","qualname":"<InvalidBitPattern<Bytes>>::invalid_bytes","value":"pub fn invalid_bytes(Self) -> Bytes","parent":null,"children":[],"decl_id":null,"docs":" Returns the invalid bit pattern.\n","sig":null,"attributes":[{"value":"/ Returns the invalid bit pattern.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/error.rs","byte_start":16535,"byte_end":16571,"line_start":41,"line_end":41,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/error.rs","byte_start":16576,"byte_end":16585,"line_start":42,"line_end":42,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":18},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"private","qualname":"::private","value":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/mod.rs","parent":null,"children":[{"krate":0,"index":19},{"krate":0,"index":30},{"krate":0,"index":88},{"krate":0,"index":107},{"krate":0,"index":131},{"krate":0,"index":159},{"krate":0,"index":184},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":194},{"krate":0,"index":197},{"krate":0,"index":198},{"krate":0,"index":201},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":208},{"krate":0,"index":211},{"krate":0,"index":214},{"krate":0,"index":217},{"krate":0,"index":220},{"krate":0,"index":223},{"krate":0,"index":226}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":23},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/array_bytes_conv.rs","byte_start":17260,"byte_end":17280,"line_start":3,"line_end":3,"column_start":11,"column_end":31},"name":"ArrayBytesConversion","qualname":"::private::array_bytes_conv::ArrayBytesConversion","value":"ArrayBytesConversion","parent":null,"children":[{"krate":0,"index":24},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":27}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":24},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/array_bytes_conv.rs","byte_start":17292,"byte_end":17297,"line_start":4,"line_end":4,"column_start":10,"column_end":15},"name":"Array","qualname":"::private::array_bytes_conv::ArrayBytesConversion::Array","value":"type Array;","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":25},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/array_bytes_conv.rs","byte_start":17308,"byte_end":17313,"line_start":5,"line_end":5,"column_start":10,"column_end":15},"name":"Bytes","qualname":"::private::array_bytes_conv::ArrayBytesConversion::Bytes","value":"type Bytes;","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/array_bytes_conv.rs","byte_start":17323,"byte_end":17339,"line_start":7,"line_end":7,"column_start":8,"column_end":24},"name":"bytes_into_array","qualname":"::private::array_bytes_conv::ArrayBytesConversion::bytes_into_array","value":"pub fn bytes_into_array(Self::Bytes) -> Self::Array","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/array_bytes_conv.rs","byte_start":17383,"byte_end":17399,"line_start":8,"line_end":8,"column_start":8,"column_end":24},"name":"array_into_bytes","qualname":"::private::array_bytes_conv::ArrayBytesConversion::array_into_bytes","value":"pub fn array_into_bytes(Self::Array) -> Self::Bytes","parent":{"krate":0,"index":23},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":30},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"checks","qualname":"::private::checks","value":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","parent":null,"children":[{"krate":0,"index":31},{"krate":0,"index":33},{"krate":0,"index":428},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":38},{"krate":0,"index":42},{"krate":0,"index":434},{"krate":0,"index":435},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":441},{"krate":0,"index":442},{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":458},{"krate":0,"index":459},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":469},{"krate":0,"index":470},{"krate":0,"index":472},{"krate":0,"index":473},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":479},{"krate":0,"index":480},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":43},{"krate":0,"index":44},{"krate":0,"index":45},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51},{"krate":0,"index":53},{"krate":0,"index":55},{"krate":0,"index":56},{"krate":0,"index":57},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":60},{"krate":0,"index":61},{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64},{"krate":0,"index":66},{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":74},{"krate":0,"index":77},{"krate":0,"index":79},{"krate":0,"index":82},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":87}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":32},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":19473,"byte_end":19479,"line_start":3,"line_end":3,"column_start":15,"column_end":21},"name":"Sealed","qualname":"::private::checks::private::Sealed","value":"Sealed","parent":null,"children":[],"decl_id":null,"docs":" Prevents internal traits from being implemented from dependencies.\n","sig":null,"attributes":[{"value":"/ Prevents internal traits from being implemented from dependencies.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":19388,"byte_end":19458,"line_start":2,"line_end":2,"column_start":5,"column_end":75}}]},{"kind":"Trait","id":{"krate":0,"index":34},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":19800,"byte_end":19830,"line_start":17,"line_end":17,"column_start":11,"column_end":41},"name":"TotalSizeIsMultipleOfEightBits","qualname":"::private::checks::TotalSizeIsMultipleOfEightBits","value":"TotalSizeIsMultipleOfEightBits: private::Sealed","parent":null,"children":[],"decl_id":null,"docs":" Helper trait to check whether the size of bitfield structs\n is a multiple of 8 to form complete bytes.\n","sig":null,"attributes":[{"value":"/ Helper trait to check whether the size of bitfield structs","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":19680,"byte_end":19742,"line_start":15,"line_end":15,"column_start":1,"column_end":63}},{"value":"/ is a multiple of 8 to form complete bytes.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":19743,"byte_end":19789,"line_start":16,"line_end":16,"column_start":1,"column_end":47}}]},{"kind":"Trait","id":{"krate":0,"index":35},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":19986,"byte_end":20019,"line_start":21,"line_end":21,"column_start":11,"column_end":44},"name":"TotalSizeIsNotMultipleOfEightBits","qualname":"::private::checks::TotalSizeIsNotMultipleOfEightBits","value":"TotalSizeIsNotMultipleOfEightBits: private::Sealed","parent":null,"children":[],"decl_id":null,"docs":" Helper trait used to check whether a bitfield struct does not\n fill its entire value space, e.g. has undefined bits.\n","sig":null,"attributes":[{"value":"/ Helper trait used to check whether a bitfield struct does not","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":19852,"byte_end":19917,"line_start":19,"line_end":19,"column_start":1,"column_end":66}},{"value":"/ fill its entire value space, e.g. has undefined bits.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":19918,"byte_end":19975,"line_start":20,"line_end":20,"column_start":1,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":36},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":20103,"byte_end":20117,"line_start":24,"line_end":24,"column_start":11,"column_end":25},"name":"RenameSizeType","qualname":"::private::checks::RenameSizeType","value":"RenameSizeType: private::Sealed","parent":null,"children":[{"krate":0,"index":37}],"decl_id":null,"docs":" Helper trait to improve compile error messages.\n","sig":null,"attributes":[{"value":"/ Helper trait to improve compile error messages.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":20041,"byte_end":20092,"line_start":23,"line_end":23,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":37},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":20146,"byte_end":20155,"line_start":25,"line_end":25,"column_start":10,"column_end":19},"name":"CheckType","qualname":"::private::checks::RenameSizeType::CheckType","value":"type CheckType;","parent":{"krate":0,"index":36},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":38},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":20237,"byte_end":20246,"line_start":29,"line_end":29,"column_start":12,"column_end":21},"name":"TotalSize","qualname":"::private::checks::TotalSize","value":"","parent":null,"children":[],"decl_id":null,"docs":" Helper type to sum up bit size of a bitfield at compile time.\n","sig":null,"attributes":[{"value":"/ Helper type to sum up bit size of a bitfield at compile time.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":20160,"byte_end":20225,"line_start":28,"line_end":28,"column_start":1,"column_end":66}}]},{"kind":"Enum","id":{"krate":0,"index":434},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":20669,"byte_end":20677,"line_start":45,"line_end":45,"column_start":9,"column_end":17},"name":"ZeroMod8","qualname":"::private::checks::ZeroMod8","value":"pub enum ZeroMod8 { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":441},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":20688,"byte_end":20695,"line_start":46,"line_end":46,"column_start":9,"column_end":16},"name":"OneMod8","qualname":"::private::checks::OneMod8","value":"pub enum OneMod8 { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":448},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":20706,"byte_end":20713,"line_start":47,"line_end":47,"column_start":9,"column_end":16},"name":"TwoMod8","qualname":"::private::checks::TwoMod8","value":"pub enum TwoMod8 { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":455},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":20724,"byte_end":20733,"line_start":48,"line_end":48,"column_start":9,"column_end":18},"name":"ThreeMod8","qualname":"::private::checks::ThreeMod8","value":"pub enum ThreeMod8 { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":462},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":20744,"byte_end":20752,"line_start":49,"line_end":49,"column_start":9,"column_end":17},"name":"FourMod8","qualname":"::private::checks::FourMod8","value":"pub enum FourMod8 { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":469},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":20763,"byte_end":20771,"line_start":50,"line_end":50,"column_start":9,"column_end":17},"name":"FiveMod8","qualname":"::private::checks::FiveMod8","value":"pub enum FiveMod8 { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":476},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":20782,"byte_end":20789,"line_start":51,"line_end":51,"column_start":9,"column_end":16},"name":"SixMod8","qualname":"::private::checks::SixMod8","value":"pub enum SixMod8 { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":483},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":20800,"byte_end":20809,"line_start":52,"line_end":52,"column_start":9,"column_end":18},"name":"SevenMod8","qualname":"::private::checks::SevenMod8","value":"pub enum SevenMod8 { }","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":51},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":21396,"byte_end":21421,"line_start":67,"line_end":67,"column_start":11,"column_end":36},"name":"CheckTotalSizeMultipleOf8","qualname":"::private::checks::CheckTotalSizeMultipleOf8","value":"CheckTotalSizeMultipleOf8","parent":null,"children":[{"krate":0,"index":52}],"decl_id":null,"docs":" Public facing trait implemented by bitfield structs in order to let the compiler\n check if their sizes match a multiple of 8.\n","sig":null,"attributes":[{"value":"/ Public facing trait implemented by bitfield structs in order to let the compiler","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":21253,"byte_end":21337,"line_start":65,"line_end":65,"column_start":1,"column_end":85}},{"value":"/ check if their sizes match a multiple of 8.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":21338,"byte_end":21385,"line_start":66,"line_end":66,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":52},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":21518,"byte_end":21522,"line_start":71,"line_end":71,"column_start":10,"column_end":14},"name":"Size","qualname":"::private::checks::CheckTotalSizeMultipleOf8::Size","value":"type Size: RenameSizeType;","parent":{"krate":0,"index":51},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":53},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":21695,"byte_end":21725,"line_start":76,"line_end":76,"column_start":11,"column_end":41},"name":"CheckTotalSizeIsNotMultipleOf8","qualname":"::private::checks::CheckTotalSizeIsNotMultipleOf8","value":"CheckTotalSizeIsNotMultipleOf8","parent":null,"children":[{"krate":0,"index":54}],"decl_id":null,"docs":" Public facing trait implemented by bitfield structs in order to let the compiler\n check if their sizes does not match a multiple of 8.\n","sig":null,"attributes":[{"value":"/ Public facing trait implemented by bitfield structs in order to let the compiler","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":21543,"byte_end":21627,"line_start":74,"line_end":74,"column_start":1,"column_end":85}},{"value":"/ check if their sizes does not match a multiple of 8.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":21628,"byte_end":21684,"line_start":75,"line_end":75,"column_start":1,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":54},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":21825,"byte_end":21829,"line_start":80,"line_end":80,"column_start":10,"column_end":14},"name":"Size","qualname":"::private::checks::CheckTotalSizeIsNotMultipleOf8::Size","value":"type Size: RenameSizeType;","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":55},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":21962,"byte_end":21981,"line_start":85,"line_end":85,"column_start":11,"column_end":30},"name":"DiscriminantInRange","qualname":"::private::checks::DiscriminantInRange","value":"DiscriminantInRange: private::Sealed","parent":null,"children":[],"decl_id":null,"docs":" Helper trait to check if an enum discriminant of a bitfield specifier\n is within valid bounds.\n","sig":null,"attributes":[{"value":"/ Helper trait to check if an enum discriminant of a bitfield specifier","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":21850,"byte_end":21923,"line_start":83,"line_end":83,"column_start":1,"column_end":74}},{"value":"/ is within valid bounds.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":21924,"byte_end":21951,"line_start":84,"line_end":84,"column_start":1,"column_end":28}}]},{"kind":"Trait","id":{"krate":0,"index":56},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":22127,"byte_end":22152,"line_start":90,"line_end":90,"column_start":11,"column_end":36},"name":"SpecifierHasAtMost128Bits","qualname":"::private::checks::SpecifierHasAtMost128Bits","value":"SpecifierHasAtMost128Bits: private::Sealed","parent":null,"children":[],"decl_id":null,"docs":" Helper trait to check if a `#[derive(BitfieldSpecifier)]` flagged bitfield\n requires\n at most 128 bits.\n","sig":null,"attributes":[{"value":"/ Helper trait to check if a `#[derive(BitfieldSpecifier)]` flagged bitfield","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":22003,"byte_end":22081,"line_start":87,"line_end":87,"column_start":1,"column_end":79}},{"value":"/ requires","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":22082,"byte_end":22094,"line_start":88,"line_end":88,"column_start":1,"column_end":13}},{"value":"/ at most 128 bits.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":22095,"byte_end":22116,"line_start":89,"line_end":89,"column_start":1,"column_end":22}}]},{"kind":"Enum","id":{"krate":0,"index":57},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":22305,"byte_end":22309,"line_start":97,"line_end":97,"column_start":10,"column_end":14},"name":"True","qualname":"::private::checks::True","value":"pub enum True { }","parent":null,"children":[],"decl_id":null,"docs":" Helper type to state that something is `true`.","sig":null,"attributes":[{"value":"/ Helper type to state that something is `true`.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":22174,"byte_end":22224,"line_start":92,"line_end":92,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":22225,"byte_end":22228,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":22229,"byte_end":22239,"line_start":94,"line_end":94,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":22240,"byte_end":22243,"line_start":95,"line_end":95,"column_start":1,"column_end":4}},{"value":"/ Used for some compile time evaluation contexts.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":22244,"byte_end":22295,"line_start":96,"line_end":96,"column_start":1,"column_end":52}}]},{"kind":"Enum","id":{"krate":0,"index":58},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":22446,"byte_end":22451,"line_start":104,"line_end":104,"column_start":10,"column_end":15},"name":"False","qualname":"::private::checks::False","value":"pub enum False { }","parent":null,"children":[],"decl_id":null,"docs":" Helper type to state that something is `false`.","sig":null,"attributes":[{"value":"/ Helper type to state that something is `false`.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":22314,"byte_end":22365,"line_start":99,"line_end":99,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":22366,"byte_end":22369,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":22370,"byte_end":22380,"line_start":101,"line_end":101,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":22381,"byte_end":22384,"line_start":102,"line_end":102,"column_start":1,"column_end":4}},{"value":"/ Used for some compile time evaluation contexts.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":22385,"byte_end":22436,"line_start":103,"line_end":103,"column_start":1,"column_end":52}}]},{"kind":"Trait","id":{"krate":0,"index":64},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":22715,"byte_end":22732,"line_start":113,"line_end":113,"column_start":11,"column_end":28},"name":"DispatchTrueFalse","qualname":"::private::checks::DispatchTrueFalse","value":"DispatchTrueFalse: private::Sealed","parent":null,"children":[{"krate":0,"index":65}],"decl_id":null,"docs":" Helper trait to improve compile time error messages.\n","sig":null,"attributes":[{"value":"/ Helper trait to improve compile time error messages.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":22648,"byte_end":22704,"line_start":112,"line_end":112,"column_start":1,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":65},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":22761,"byte_end":22764,"line_start":114,"line_end":114,"column_start":10,"column_end":13},"name":"Out","qualname":"::private::checks::DispatchTrueFalse::Out","value":"type Out;","parent":{"krate":0,"index":64},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":74},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":23193,"byte_end":23217,"line_start":130,"line_end":130,"column_start":11,"column_end":35},"name":"CheckDiscriminantInRange","qualname":"::private::checks::CheckDiscriminantInRange","value":"CheckDiscriminantInRange<A>","parent":null,"children":[{"krate":0,"index":76}],"decl_id":null,"docs":" Public facing trait that is implemented by bitfield specifiers to\n let the compiler check if all its variant discriminants are within\n valid bounds.\n","sig":null,"attributes":[{"value":"/ Public facing trait that is implemented by bitfield specifiers to","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":23024,"byte_end":23093,"line_start":127,"line_end":127,"column_start":1,"column_end":70}},{"value":"/ let the compiler check if all its variant discriminants are within","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":23094,"byte_end":23164,"line_start":128,"line_end":128,"column_start":1,"column_end":71}},{"value":"/ valid bounds.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":23165,"byte_end":23182,"line_start":129,"line_end":129,"column_start":1,"column_end":18}}]},{"kind":"Type","id":{"krate":0,"index":76},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":23308,"byte_end":23317,"line_start":134,"line_end":134,"column_start":10,"column_end":19},"name":"CheckType","qualname":"::private::checks::CheckDiscriminantInRange::CheckType","value":"type CheckType: DispatchTrueFalse;","parent":{"krate":0,"index":74},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":77},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":23464,"byte_end":23494,"line_start":139,"line_end":139,"column_start":11,"column_end":41},"name":"CheckSpecifierHasAtMost128Bits","qualname":"::private::checks::CheckSpecifierHasAtMost128Bits","value":"CheckSpecifierHasAtMost128Bits","parent":null,"children":[{"krate":0,"index":78}],"decl_id":null,"docs":" Traits to check at compile-time if a `#[derive(BitfieldSpecifier)]` type requires\n no more than 128 bits.\n","sig":null,"attributes":[{"value":"/ Traits to check at compile-time if a `#[derive(BitfieldSpecifier)]` type requires","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":23341,"byte_end":23426,"line_start":137,"line_end":137,"column_start":1,"column_end":86}},{"value":"/ no more than 128 bits.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":23427,"byte_end":23453,"line_start":138,"line_end":138,"column_start":1,"column_end":27}}]},{"kind":"Type","id":{"krate":0,"index":78},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":23588,"byte_end":23597,"line_start":143,"line_end":143,"column_start":10,"column_end":19},"name":"CheckType","qualname":"::private::checks::CheckSpecifierHasAtMost128Bits::CheckType","value":"type CheckType: DispatchTrueFalse;","parent":{"krate":0,"index":77},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":79},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":23717,"byte_end":23726,"line_start":148,"line_end":148,"column_start":12,"column_end":21},"name":"BitsCheck","qualname":"::private::checks::BitsCheck","value":"BitsCheck { arr }","parent":null,"children":[{"krate":0,"index":81}],"decl_id":null,"docs":" Helper type to check whether a bitfield member aligns to\n the specified bits.\n","sig":null,"attributes":[{"value":"/ Helper type to check whether a bitfield member aligns to","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":23621,"byte_end":23681,"line_start":146,"line_end":146,"column_start":1,"column_end":61}},{"value":"/ the specified bits.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":23682,"byte_end":23705,"line_start":147,"line_end":147,"column_start":1,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":81},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":23740,"byte_end":23743,"line_start":149,"line_end":149,"column_start":9,"column_end":12},"name":"arr","qualname":"::private::checks::BitsCheck::arr","value":"A","parent":{"krate":0,"index":79},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":82},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":23761,"byte_end":23784,"line_start":152,"line_end":152,"column_start":11,"column_end":34},"name":"CheckFillsUnalignedBits","qualname":"::private::checks::CheckFillsUnalignedBits","value":"CheckFillsUnalignedBits","parent":null,"children":[{"krate":0,"index":83}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":83},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":23871,"byte_end":23880,"line_start":156,"line_end":156,"column_start":10,"column_end":19},"name":"CheckType","qualname":"::private::checks::CheckFillsUnalignedBits::CheckType","value":"type CheckType: DispatchTrueFalse;","parent":{"krate":0,"index":82},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":84},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":23914,"byte_end":23932,"line_start":159,"line_end":159,"column_start":11,"column_end":29},"name":"FillsUnalignedBits","qualname":"::private::checks::FillsUnalignedBits","value":"FillsUnalignedBits","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":85},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":23947,"byte_end":23976,"line_start":161,"line_end":161,"column_start":11,"column_end":40},"name":"CheckDoesNotFillUnalignedBits","qualname":"::private::checks::CheckDoesNotFillUnalignedBits","value":"CheckDoesNotFillUnalignedBits","parent":null,"children":[{"krate":0,"index":86}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":86},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":24069,"byte_end":24078,"line_start":165,"line_end":165,"column_start":10,"column_end":19},"name":"CheckType","qualname":"::private::checks::CheckDoesNotFillUnalignedBits::CheckType","value":"type CheckType: DispatchTrueFalse;","parent":{"krate":0,"index":85},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":87},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":24112,"byte_end":24136,"line_start":168,"line_end":168,"column_start":11,"column_end":35},"name":"DoesNotFillUnalignedBits","qualname":"::private::checks::DoesNotFillUnalignedBits","value":"DoesNotFillUnalignedBits","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":127},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/proc.rs","byte_start":25920,"byte_end":25934,"line_start":23,"line_end":23,"column_start":8,"column_end":22},"name":"read_specifier","qualname":"::private::proc::read_specifier","value":"pub fn read_specifier<T>(&[u8], usize) -> <T as Specifier>::Bytes where\nT: Specifier, PushBuffer<T::Bytes>: Default + PushBits","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/proc.rs","byte_start":25903,"byte_end":25912,"line_start":22,"line_end":22,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":129},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/proc.rs","byte_start":27278,"byte_end":27293,"line_start":64,"line_end":64,"column_start":8,"column_end":23},"name":"write_specifier","qualname":"::private::proc::write_specifier","value":"pub fn write_specifier<T>(&mut [u8], usize, <T as Specifier>::Bytes) where\nT: Specifier, PopBuffer<T::Bytes>: PopBits","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/proc.rs","byte_start":27261,"byte_end":27270,"line_start":63,"line_end":63,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":142},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/push_pop.rs","byte_start":29371,"byte_end":29380,"line_start":8,"line_end":8,"column_start":12,"column_end":21},"name":"PopBuffer","qualname":"::private::push_pop::PopBuffer","value":"PopBuffer {  }","parent":null,"children":[{"krate":0,"index":144}],"decl_id":null,"docs":" A bit buffer that allows to pop bits from it.\n","sig":null,"attributes":[{"value":"/ A bit buffer that allows to pop bits from it.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/push_pop.rs","byte_start":29310,"byte_end":29359,"line_start":7,"line_end":7,"column_start":1,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":152},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/push_pop.rs","byte_start":30934,"byte_end":30944,"line_start":59,"line_end":59,"column_start":12,"column_end":22},"name":"PushBuffer","qualname":"::private::push_pop::PushBuffer","value":"PushBuffer {  }","parent":null,"children":[{"krate":0,"index":154}],"decl_id":null,"docs":" A bit buffer that allows to push bits onto it.\n","sig":null,"attributes":[{"value":"/ A bit buffer that allows to push bits onto it.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/push_pop.rs","byte_start":30872,"byte_end":30922,"line_start":58,"line_end":58,"column_start":1,"column_end":51}}]},{"kind":"Trait","id":{"krate":0,"index":163},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/traits.rs","byte_start":32300,"byte_end":32308,"line_start":9,"line_end":9,"column_start":11,"column_end":19},"name":"PushBits","qualname":"::private::traits::PushBits","value":"PushBits: checks::private::Sealed","parent":null,"children":[{"krate":0,"index":164}],"decl_id":null,"docs":" Helper trait for underlying primitives handling of bitfields.","sig":null,"attributes":[{"value":"/ Helper trait for underlying primitives handling of bitfields.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/traits.rs","byte_start":32134,"byte_end":32199,"line_start":3,"line_end":3,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/traits.rs","byte_start":32200,"byte_end":32203,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/traits.rs","byte_start":32204,"byte_end":32214,"line_start":5,"line_end":5,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/traits.rs","byte_start":32215,"byte_end":32218,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Must not and cannot be implemented by dependencies.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/traits.rs","byte_start":32219,"byte_end":32274,"line_start":7,"line_end":7,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/traits.rs","byte_start":32343,"byte_end":32352,"line_start":10,"line_end":10,"column_start":8,"column_end":17},"name":"push_bits","qualname":"::private::traits::PushBits::push_bits","value":"pub fn push_bits(&mut Self, u32, u8)","parent":{"krate":0,"index":163},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":165},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/traits.rs","byte_start":32557,"byte_end":32564,"line_start":19,"line_end":19,"column_start":11,"column_end":18},"name":"PopBits","qualname":"::private::traits::PopBits","value":"PopBits: checks::private::Sealed","parent":null,"children":[{"krate":0,"index":166}],"decl_id":null,"docs":" Helper trait for underlying primitives handling of bitfields.","sig":null,"attributes":[{"value":"/ Helper trait for underlying primitives handling of bitfields.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/traits.rs","byte_start":32391,"byte_end":32456,"line_start":13,"line_end":13,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/traits.rs","byte_start":32457,"byte_end":32460,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/traits.rs","byte_start":32461,"byte_end":32471,"line_start":15,"line_end":15,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/traits.rs","byte_start":32472,"byte_end":32475,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Must not and cannot be implemented by dependencies.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/traits.rs","byte_start":32476,"byte_end":32531,"line_start":17,"line_end":17,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":166},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/traits.rs","byte_start":32599,"byte_end":32607,"line_start":20,"line_end":20,"column_start":8,"column_end":16},"name":"pop_bits","qualname":"::private::traits::PopBits::pop_bits","value":"pub fn pop_bits(&mut Self, u32) -> u8","parent":{"krate":0,"index":165},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":167},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/traits.rs","byte_start":32750,"byte_end":32764,"line_start":25,"line_end":25,"column_start":11,"column_end":25},"name":"SpecifierBytes","qualname":"::private::traits::SpecifierBytes","value":"SpecifierBytes: checks::private::Sealed","parent":null,"children":[{"krate":0,"index":168}],"decl_id":null,"docs":" Trait implemented by primitives that drive bitfield manipulations generically.\n","sig":null,"attributes":[{"value":"/ Trait implemented by primitives that drive bitfield manipulations generically.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/traits.rs","byte_start":32642,"byte_end":32724,"line_start":23,"line_end":23,"column_start":1,"column_end":83}}]},{"kind":"Type","id":{"krate":0,"index":168},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/traits.rs","byte_start":32859,"byte_end":32864,"line_start":27,"line_end":27,"column_start":10,"column_end":15},"name":"Bytes","qualname":"::private::traits::SpecifierBytes::Bytes","value":"type Bytes;","parent":{"krate":0,"index":167},"children":[],"decl_id":null,"docs":" The base type that the specifier is operating on.\n","sig":null,"attributes":[{"value":"/ The base type that the specifier is operating on.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/traits.rs","byte_start":32796,"byte_end":32849,"line_start":26,"line_end":26,"column_start":5,"column_end":58}}]},{"kind":"Trait","id":{"krate":0,"index":169},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/traits.rs","byte_start":32879,"byte_end":32893,"line_start":30,"line_end":30,"column_start":11,"column_end":25},"name":"IsU8Compatible","qualname":"::private::traits::IsU8Compatible","value":"IsU8Compatible: checks::private::Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":170},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/traits.rs","byte_start":32932,"byte_end":32947,"line_start":31,"line_end":31,"column_start":11,"column_end":26},"name":"IsU16Compatible","qualname":"::private::traits::IsU16Compatible","value":"IsU16Compatible: checks::private::Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":171},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/traits.rs","byte_start":32986,"byte_end":33001,"line_start":32,"line_end":32,"column_start":11,"column_end":26},"name":"IsU32Compatible","qualname":"::private::traits::IsU32Compatible","value":"IsU32Compatible: checks::private::Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":172},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/traits.rs","byte_start":33040,"byte_end":33055,"line_start":33,"line_end":33,"column_start":11,"column_end":26},"name":"IsU64Compatible","qualname":"::private::traits::IsU64Compatible","value":"IsU64Compatible: checks::private::Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":173},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/traits.rs","byte_start":33094,"byte_end":33110,"line_start":34,"line_end":34,"column_start":11,"column_end":27},"name":"IsU128Compatible","qualname":"::private::traits::IsU128Compatible","value":"IsU128Compatible: checks::private::Sealed","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":184},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/mod.rs","byte_start":16758,"byte_end":16775,"line_start":8,"line_end":8,"column_start":9,"column_end":26},"name":"static_assertions","qualname":"::private::static_assertions","value":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/mod.rs","parent":null,"children":[{"krate":0,"index":185}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":243},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":13717,"byte_end":13724,"line_start":434,"line_end":434,"column_start":9,"column_end":16},"name":"prelude","qualname":"::prelude","value":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":248},{"krate":0,"index":249},{"krate":0,"index":252}],"decl_id":null,"docs":" The prelude: `use modular_bitfield::prelude::*;`\n","sig":null,"attributes":[{"value":"/ The prelude: `use modular_bitfield::prelude::*;`","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":13656,"byte_end":13708,"line_start":433,"line_end":433,"column_start":1,"column_end":53}}]},{"kind":"Trait","id":{"krate":0,"index":255},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":14178,"byte_end":14187,"line_start":453,"line_end":453,"column_start":11,"column_end":20},"name":"Specifier","qualname":"::Specifier","value":"Specifier","parent":null,"children":[{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260}],"decl_id":null,"docs":" Trait implemented by all bitfield specifiers.","sig":null,"attributes":[{"value":"/ Trait implemented by all bitfield specifiers.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":13845,"byte_end":13894,"line_start":443,"line_end":443,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":13895,"byte_end":13898,"line_start":444,"line_end":444,"column_start":1,"column_end":4}},{"value":"/ Should generally not be implemented directly by users","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":13899,"byte_end":13956,"line_start":445,"line_end":445,"column_start":1,"column_end":58}},{"value":"/ but through the macros provided by the crate.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":13957,"byte_end":14006,"line_start":446,"line_end":446,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":14007,"byte_end":14010,"line_start":447,"line_end":447,"column_start":1,"column_end":4}},{"value":"/ # Note","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":14011,"byte_end":14021,"line_start":448,"line_end":448,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":14022,"byte_end":14025,"line_start":449,"line_end":449,"column_start":1,"column_end":4}},{"value":"/ These can be all unsigned fixed-size primitives,","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":14026,"byte_end":14078,"line_start":450,"line_end":450,"column_start":1,"column_end":53}},{"value":"/ represented by `B1, B2, ... B64` and enums that","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":14079,"byte_end":14130,"line_start":451,"line_end":451,"column_start":1,"column_end":52}},{"value":"/ derive from `BitfieldSpecifier`.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":14131,"byte_end":14167,"line_start":452,"line_end":452,"column_start":1,"column_end":37}}]},{"kind":"Const","id":{"krate":0,"index":256},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":14250,"byte_end":14254,"line_start":455,"line_end":455,"column_start":11,"column_end":15},"name":"BITS","qualname":"::Specifier::BITS","value":"usize","parent":{"krate":0,"index":255},"children":[],"decl_id":null,"docs":" The amount of bits used by the specifier.\n","sig":null,"attributes":[{"value":"/ The amount of bits used by the specifier.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":14194,"byte_end":14239,"line_start":454,"line_end":454,"column_start":5,"column_end":50}}]},{"kind":"Type","id":{"krate":0,"index":257},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":14411,"byte_end":14416,"line_start":462,"line_end":462,"column_start":10,"column_end":15},"name":"Bytes","qualname":"::Specifier::Bytes","value":"type Bytes;","parent":{"krate":0,"index":255},"children":[],"decl_id":null,"docs":" The base type of the specifier.","sig":null,"attributes":[{"value":"/ The base type of the specifier.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":14268,"byte_end":14303,"line_start":457,"line_end":457,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":14308,"byte_end":14311,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":14316,"byte_end":14326,"line_start":459,"line_end":459,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":14331,"byte_end":14334,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ This is the type that is used internally for computations.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":14339,"byte_end":14401,"line_start":461,"line_end":461,"column_start":5,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":258},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":14571,"byte_end":14576,"line_start":469,"line_end":469,"column_start":10,"column_end":15},"name":"InOut","qualname":"::Specifier::InOut","value":"type InOut;","parent":{"krate":0,"index":255},"children":[],"decl_id":null,"docs":" The interface type of the specifier.","sig":null,"attributes":[{"value":"/ The interface type of the specifier.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":14423,"byte_end":14463,"line_start":464,"line_end":464,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":14468,"byte_end":14471,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":14476,"byte_end":14486,"line_start":466,"line_end":466,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":14491,"byte_end":14494,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ This is the type that is used for the getters and setters.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":14499,"byte_end":14561,"line_start":468,"line_end":468,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":14880,"byte_end":14890,"line_start":478,"line_end":478,"column_start":8,"column_end":18},"name":"into_bytes","qualname":"::Specifier::into_bytes","value":"pub fn into_bytes(Self::InOut) -> Result<Self::Bytes, OutOfBounds>","parent":{"krate":0,"index":255},"children":[],"decl_id":null,"docs":" Converts some bytes into the in-out type.","sig":null,"attributes":[{"value":"/ Converts some bytes into the in-out type.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":14583,"byte_end":14628,"line_start":471,"line_end":471,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":14633,"byte_end":14636,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":14641,"byte_end":14653,"line_start":473,"line_end":473,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":14658,"byte_end":14661,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ If the in-out type is out of bounds. This can for example happen if your","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":14666,"byte_end":14742,"line_start":475,"line_end":475,"column_start":5,"column_end":81}},{"value":"/ in-out type is `u8` (for `B7`) but you specified a value that is bigger","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":14747,"byte_end":14822,"line_start":476,"line_end":476,"column_start":5,"column_end":80}},{"value":"/ or equal to 128 which exceeds the 7 bits.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":14827,"byte_end":14872,"line_start":477,"line_end":477,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":15290,"byte_end":15300,"line_start":488,"line_end":488,"column_start":8,"column_end":18},"name":"from_bytes","qualname":"::Specifier::from_bytes","value":"pub fn from_bytes(Self::Bytes)\n-> Result<Self::InOut, InvalidBitPattern<Self::Bytes>>","parent":{"krate":0,"index":255},"children":[],"decl_id":null,"docs":" Converts the given bytes into the in-out type.","sig":null,"attributes":[{"value":"/ Converts the given bytes into the in-out type.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":14953,"byte_end":15003,"line_start":480,"line_end":480,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":15008,"byte_end":15011,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":15016,"byte_end":15028,"line_start":482,"line_end":482,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":15033,"byte_end":15036,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ If the given byte pattern is invalid for the in-out type.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":15041,"byte_end":15102,"line_start":484,"line_end":484,"column_start":5,"column_end":66}},{"value":"/ This can happen for example for enums that have a number of variants which","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":15107,"byte_end":15185,"line_start":485,"line_end":485,"column_start":5,"column_end":83}},{"value":"/ is not equal to the power of two and therefore yields some invalid bit","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":15190,"byte_end":15264,"line_start":486,"line_end":486,"column_start":5,"column_end":79}},{"value":"/ patterns.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":15269,"byte_end":15282,"line_start":487,"line_end":487,"column_start":5,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":261},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":15449,"byte_end":15459,"line_start":494,"line_end":494,"column_start":9,"column_end":19},"name":"specifiers","qualname":"::specifiers","value":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1965},{"krate":0,"index":1966},{"krate":0,"index":1967},{"krate":0,"index":557},{"krate":0,"index":563},{"krate":0,"index":566},{"krate":0,"index":1969},{"krate":0,"index":1970},{"krate":0,"index":1971},{"krate":0,"index":568},{"krate":0,"index":574},{"krate":0,"index":577},{"krate":0,"index":1973},{"krate":0,"index":1974},{"krate":0,"index":1975},{"krate":0,"index":579},{"krate":0,"index":585},{"krate":0,"index":588},{"krate":0,"index":1977},{"krate":0,"index":1978},{"krate":0,"index":1979},{"krate":0,"index":590},{"krate":0,"index":596},{"krate":0,"index":599},{"krate":0,"index":1981},{"krate":0,"index":1982},{"krate":0,"index":1983},{"krate":0,"index":601},{"krate":0,"index":607},{"krate":0,"index":610},{"krate":0,"index":1985},{"krate":0,"index":1986},{"krate":0,"index":1987},{"krate":0,"index":612},{"krate":0,"index":618},{"krate":0,"index":621},{"krate":0,"index":1989},{"krate":0,"index":1990},{"krate":0,"index":1991},{"krate":0,"index":623},{"krate":0,"index":629},{"krate":0,"index":632},{"krate":0,"index":1993},{"krate":0,"index":1994},{"krate":0,"index":1995},{"krate":0,"index":634},{"krate":0,"index":640},{"krate":0,"index":643},{"krate":0,"index":1997},{"krate":0,"index":1998},{"krate":0,"index":1999},{"krate":0,"index":645},{"krate":0,"index":651},{"krate":0,"index":654},{"krate":0,"index":2001},{"krate":0,"index":2002},{"krate":0,"index":2003},{"krate":0,"index":656},{"krate":0,"index":662},{"krate":0,"index":665},{"krate":0,"index":2005},{"krate":0,"index":2006},{"krate":0,"index":2007},{"krate":0,"index":667},{"krate":0,"index":673},{"krate":0,"index":676},{"krate":0,"index":2009},{"krate":0,"index":2010},{"krate":0,"index":2011},{"krate":0,"index":678},{"krate":0,"index":684},{"krate":0,"index":687},{"krate":0,"index":2013},{"krate":0,"index":2014},{"krate":0,"index":2015},{"krate":0,"index":689},{"krate":0,"index":695},{"krate":0,"index":698},{"krate":0,"index":2017},{"krate":0,"index":2018},{"krate":0,"index":2019},{"krate":0,"index":700},{"krate":0,"index":706},{"krate":0,"index":709},{"krate":0,"index":2021},{"krate":0,"index":2022},{"krate":0,"index":2023},{"krate":0,"index":711},{"krate":0,"index":717},{"krate":0,"index":720},{"krate":0,"index":2025},{"krate":0,"index":2026},{"krate":0,"index":2027},{"krate":0,"index":722},{"krate":0,"index":728},{"krate":0,"index":731},{"krate":0,"index":2029},{"krate":0,"index":2030},{"krate":0,"index":2031},{"krate":0,"index":733},{"krate":0,"index":739},{"krate":0,"index":742},{"krate":0,"index":2033},{"krate":0,"index":2034},{"krate":0,"index":2035},{"krate":0,"index":744},{"krate":0,"index":750},{"krate":0,"index":753},{"krate":0,"index":2037},{"krate":0,"index":2038},{"krate":0,"index":2039},{"krate":0,"index":755},{"krate":0,"index":761},{"krate":0,"index":764},{"krate":0,"index":2041},{"krate":0,"index":2042},{"krate":0,"index":2043},{"krate":0,"index":766},{"krate":0,"index":772},{"krate":0,"index":775},{"krate":0,"index":2045},{"krate":0,"index":2046},{"krate":0,"index":2047},{"krate":0,"index":777},{"krate":0,"index":783},{"krate":0,"index":786},{"krate":0,"index":2049},{"krate":0,"index":2050},{"krate":0,"index":2051},{"krate":0,"index":788},{"krate":0,"index":794},{"krate":0,"index":797},{"krate":0,"index":2053},{"krate":0,"index":2054},{"krate":0,"index":2055},{"krate":0,"index":799},{"krate":0,"index":805},{"krate":0,"index":808},{"krate":0,"index":2057},{"krate":0,"index":2058},{"krate":0,"index":2059},{"krate":0,"index":810},{"krate":0,"index":816},{"krate":0,"index":819},{"krate":0,"index":2061},{"krate":0,"index":2062},{"krate":0,"index":2063},{"krate":0,"index":821},{"krate":0,"index":827},{"krate":0,"index":830},{"krate":0,"index":2065},{"krate":0,"index":2066},{"krate":0,"index":2067},{"krate":0,"index":832},{"krate":0,"index":838},{"krate":0,"index":841},{"krate":0,"index":2069},{"krate":0,"index":2070},{"krate":0,"index":2071},{"krate":0,"index":843},{"krate":0,"index":849},{"krate":0,"index":852},{"krate":0,"index":2073},{"krate":0,"index":2074},{"krate":0,"index":2075},{"krate":0,"index":854},{"krate":0,"index":860},{"krate":0,"index":863},{"krate":0,"index":2077},{"krate":0,"index":2078},{"krate":0,"index":2079},{"krate":0,"index":865},{"krate":0,"index":871},{"krate":0,"index":874},{"krate":0,"index":2081},{"krate":0,"index":2082},{"krate":0,"index":2083},{"krate":0,"index":876},{"krate":0,"index":882},{"krate":0,"index":885},{"krate":0,"index":2085},{"krate":0,"index":2086},{"krate":0,"index":2087},{"krate":0,"index":887},{"krate":0,"index":893},{"krate":0,"index":896},{"krate":0,"index":2089},{"krate":0,"index":2090},{"krate":0,"index":2091},{"krate":0,"index":898},{"krate":0,"index":904},{"krate":0,"index":907},{"krate":0,"index":2093},{"krate":0,"index":2094},{"krate":0,"index":2095},{"krate":0,"index":909},{"krate":0,"index":915},{"krate":0,"index":918},{"krate":0,"index":2097},{"krate":0,"index":2098},{"krate":0,"index":2099},{"krate":0,"index":920},{"krate":0,"index":926},{"krate":0,"index":929},{"krate":0,"index":2101},{"krate":0,"index":2102},{"krate":0,"index":2103},{"krate":0,"index":931},{"krate":0,"index":937},{"krate":0,"index":940},{"krate":0,"index":2105},{"krate":0,"index":2106},{"krate":0,"index":2107},{"krate":0,"index":942},{"krate":0,"index":948},{"krate":0,"index":951},{"krate":0,"index":2109},{"krate":0,"index":2110},{"krate":0,"index":2111},{"krate":0,"index":953},{"krate":0,"index":959},{"krate":0,"index":962},{"krate":0,"index":2113},{"krate":0,"index":2114},{"krate":0,"index":2115},{"krate":0,"index":964},{"krate":0,"index":970},{"krate":0,"index":973},{"krate":0,"index":2117},{"krate":0,"index":2118},{"krate":0,"index":2119},{"krate":0,"index":975},{"krate":0,"index":981},{"krate":0,"index":984},{"krate":0,"index":2121},{"krate":0,"index":2122},{"krate":0,"index":2123},{"krate":0,"index":986},{"krate":0,"index":992},{"krate":0,"index":995},{"krate":0,"index":2125},{"krate":0,"index":2126},{"krate":0,"index":2127},{"krate":0,"index":997},{"krate":0,"index":1003},{"krate":0,"index":1006},{"krate":0,"index":2129},{"krate":0,"index":2130},{"krate":0,"index":2131},{"krate":0,"index":1008},{"krate":0,"index":1014},{"krate":0,"index":1017},{"krate":0,"index":2133},{"krate":0,"index":2134},{"krate":0,"index":2135},{"krate":0,"index":1019},{"krate":0,"index":1025},{"krate":0,"index":1028},{"krate":0,"index":2137},{"krate":0,"index":2138},{"krate":0,"index":2139},{"krate":0,"index":1030},{"krate":0,"index":1036},{"krate":0,"index":1039},{"krate":0,"index":2141},{"krate":0,"index":2142},{"krate":0,"index":2143},{"krate":0,"index":1041},{"krate":0,"index":1047},{"krate":0,"index":1050},{"krate":0,"index":2145},{"krate":0,"index":2146},{"krate":0,"index":2147},{"krate":0,"index":1052},{"krate":0,"index":1058},{"krate":0,"index":1061},{"krate":0,"index":2149},{"krate":0,"index":2150},{"krate":0,"index":2151},{"krate":0,"index":1063},{"krate":0,"index":1069},{"krate":0,"index":1072},{"krate":0,"index":2153},{"krate":0,"index":2154},{"krate":0,"index":2155},{"krate":0,"index":1074},{"krate":0,"index":1080},{"krate":0,"index":1083},{"krate":0,"index":2157},{"krate":0,"index":2158},{"krate":0,"index":2159},{"krate":0,"index":1085},{"krate":0,"index":1091},{"krate":0,"index":1094},{"krate":0,"index":2161},{"krate":0,"index":2162},{"krate":0,"index":2163},{"krate":0,"index":1096},{"krate":0,"index":1102},{"krate":0,"index":1105},{"krate":0,"index":2165},{"krate":0,"index":2166},{"krate":0,"index":2167},{"krate":0,"index":1107},{"krate":0,"index":1113},{"krate":0,"index":1116},{"krate":0,"index":2169},{"krate":0,"index":2170},{"krate":0,"index":2171},{"krate":0,"index":1118},{"krate":0,"index":1124},{"krate":0,"index":1127},{"krate":0,"index":2173},{"krate":0,"index":2174},{"krate":0,"index":2175},{"krate":0,"index":1129},{"krate":0,"index":1135},{"krate":0,"index":1138},{"krate":0,"index":2177},{"krate":0,"index":2178},{"krate":0,"index":2179},{"krate":0,"index":1140},{"krate":0,"index":1146},{"krate":0,"index":1149},{"krate":0,"index":2181},{"krate":0,"index":2182},{"krate":0,"index":2183},{"krate":0,"index":1151},{"krate":0,"index":1157},{"krate":0,"index":1160},{"krate":0,"index":2185},{"krate":0,"index":2186},{"krate":0,"index":2187},{"krate":0,"index":1162},{"krate":0,"index":1168},{"krate":0,"index":1171},{"krate":0,"index":2189},{"krate":0,"index":2190},{"krate":0,"index":2191},{"krate":0,"index":1173},{"krate":0,"index":1179},{"krate":0,"index":1182},{"krate":0,"index":2193},{"krate":0,"index":2194},{"krate":0,"index":2195},{"krate":0,"index":1184},{"krate":0,"index":1190},{"krate":0,"index":1193},{"krate":0,"index":2197},{"krate":0,"index":2198},{"krate":0,"index":2199},{"krate":0,"index":1195},{"krate":0,"index":1201},{"krate":0,"index":1204},{"krate":0,"index":2201},{"krate":0,"index":2202},{"krate":0,"index":2203},{"krate":0,"index":1206},{"krate":0,"index":1212},{"krate":0,"index":1215},{"krate":0,"index":2205},{"krate":0,"index":2206},{"krate":0,"index":2207},{"krate":0,"index":1217},{"krate":0,"index":1223},{"krate":0,"index":1226},{"krate":0,"index":2209},{"krate":0,"index":2210},{"krate":0,"index":2211},{"krate":0,"index":1228},{"krate":0,"index":1234},{"krate":0,"index":1237},{"krate":0,"index":2213},{"krate":0,"index":2214},{"krate":0,"index":2215},{"krate":0,"index":1239},{"krate":0,"index":1245},{"krate":0,"index":1248},{"krate":0,"index":2217},{"krate":0,"index":2218},{"krate":0,"index":2219},{"krate":0,"index":1250},{"krate":0,"index":1256},{"krate":0,"index":1259},{"krate":0,"index":2221},{"krate":0,"index":2222},{"krate":0,"index":2223},{"krate":0,"index":1261},{"krate":0,"index":1267},{"krate":0,"index":1270},{"krate":0,"index":2225},{"krate":0,"index":2226},{"krate":0,"index":2227},{"krate":0,"index":1272},{"krate":0,"index":1278},{"krate":0,"index":1281},{"krate":0,"index":2229},{"krate":0,"index":2230},{"krate":0,"index":2231},{"krate":0,"index":1283},{"krate":0,"index":1289},{"krate":0,"index":1292},{"krate":0,"index":2233},{"krate":0,"index":2234},{"krate":0,"index":2235},{"krate":0,"index":1294},{"krate":0,"index":1300},{"krate":0,"index":1303},{"krate":0,"index":2237},{"krate":0,"index":2238},{"krate":0,"index":2239},{"krate":0,"index":1305},{"krate":0,"index":1311},{"krate":0,"index":1314},{"krate":0,"index":2241},{"krate":0,"index":2242},{"krate":0,"index":2243},{"krate":0,"index":1316},{"krate":0,"index":1322},{"krate":0,"index":1325},{"krate":0,"index":2245},{"krate":0,"index":2246},{"krate":0,"index":2247},{"krate":0,"index":1327},{"krate":0,"index":1333},{"krate":0,"index":1336},{"krate":0,"index":2249},{"krate":0,"index":2250},{"krate":0,"index":2251},{"krate":0,"index":1338},{"krate":0,"index":1344},{"krate":0,"index":1347},{"krate":0,"index":2253},{"krate":0,"index":2254},{"krate":0,"index":2255},{"krate":0,"index":1349},{"krate":0,"index":1355},{"krate":0,"index":1358},{"krate":0,"index":2257},{"krate":0,"index":2258},{"krate":0,"index":2259},{"krate":0,"index":1360},{"krate":0,"index":1366},{"krate":0,"index":1369},{"krate":0,"index":2261},{"krate":0,"index":2262},{"krate":0,"index":2263},{"krate":0,"index":1371},{"krate":0,"index":1377},{"krate":0,"index":1380},{"krate":0,"index":2265},{"krate":0,"index":2266},{"krate":0,"index":2267},{"krate":0,"index":1382},{"krate":0,"index":1388},{"krate":0,"index":1391},{"krate":0,"index":2269},{"krate":0,"index":2270},{"krate":0,"index":2271},{"krate":0,"index":1393},{"krate":0,"index":1399},{"krate":0,"index":1402},{"krate":0,"index":2273},{"krate":0,"index":2274},{"krate":0,"index":2275},{"krate":0,"index":1404},{"krate":0,"index":1410},{"krate":0,"index":1413},{"krate":0,"index":2277},{"krate":0,"index":2278},{"krate":0,"index":2279},{"krate":0,"index":1415},{"krate":0,"index":1421},{"krate":0,"index":1424},{"krate":0,"index":2281},{"krate":0,"index":2282},{"krate":0,"index":2283},{"krate":0,"index":1426},{"krate":0,"index":1432},{"krate":0,"index":1435},{"krate":0,"index":2285},{"krate":0,"index":2286},{"krate":0,"index":2287},{"krate":0,"index":1437},{"krate":0,"index":1443},{"krate":0,"index":1446},{"krate":0,"index":2289},{"krate":0,"index":2290},{"krate":0,"index":2291},{"krate":0,"index":1448},{"krate":0,"index":1454},{"krate":0,"index":1457},{"krate":0,"index":2293},{"krate":0,"index":2294},{"krate":0,"index":2295},{"krate":0,"index":1459},{"krate":0,"index":1465},{"krate":0,"index":1468},{"krate":0,"index":2297},{"krate":0,"index":2298},{"krate":0,"index":2299},{"krate":0,"index":1470},{"krate":0,"index":1476},{"krate":0,"index":1479},{"krate":0,"index":2301},{"krate":0,"index":2302},{"krate":0,"index":2303},{"krate":0,"index":1481},{"krate":0,"index":1487},{"krate":0,"index":1490},{"krate":0,"index":2305},{"krate":0,"index":2306},{"krate":0,"index":2307},{"krate":0,"index":1492},{"krate":0,"index":1498},{"krate":0,"index":1501},{"krate":0,"index":2309},{"krate":0,"index":2310},{"krate":0,"index":2311},{"krate":0,"index":1503},{"krate":0,"index":1509},{"krate":0,"index":1512},{"krate":0,"index":2313},{"krate":0,"index":2314},{"krate":0,"index":2315},{"krate":0,"index":1514},{"krate":0,"index":1520},{"krate":0,"index":1523},{"krate":0,"index":2317},{"krate":0,"index":2318},{"krate":0,"index":2319},{"krate":0,"index":1525},{"krate":0,"index":1531},{"krate":0,"index":1534},{"krate":0,"index":2321},{"krate":0,"index":2322},{"krate":0,"index":2323},{"krate":0,"index":1536},{"krate":0,"index":1542},{"krate":0,"index":1545},{"krate":0,"index":2325},{"krate":0,"index":2326},{"krate":0,"index":2327},{"krate":0,"index":1547},{"krate":0,"index":1553},{"krate":0,"index":1556},{"krate":0,"index":2329},{"krate":0,"index":2330},{"krate":0,"index":2331},{"krate":0,"index":1558},{"krate":0,"index":1564},{"krate":0,"index":1567},{"krate":0,"index":2333},{"krate":0,"index":2334},{"krate":0,"index":2335},{"krate":0,"index":1569},{"krate":0,"index":1575},{"krate":0,"index":1578},{"krate":0,"index":2337},{"krate":0,"index":2338},{"krate":0,"index":2339},{"krate":0,"index":1580},{"krate":0,"index":1586},{"krate":0,"index":1589},{"krate":0,"index":2341},{"krate":0,"index":2342},{"krate":0,"index":2343},{"krate":0,"index":1591},{"krate":0,"index":1597},{"krate":0,"index":1600},{"krate":0,"index":2345},{"krate":0,"index":2346},{"krate":0,"index":2347},{"krate":0,"index":1602},{"krate":0,"index":1608},{"krate":0,"index":1611},{"krate":0,"index":2349},{"krate":0,"index":2350},{"krate":0,"index":2351},{"krate":0,"index":1613},{"krate":0,"index":1619},{"krate":0,"index":1622},{"krate":0,"index":2353},{"krate":0,"index":2354},{"krate":0,"index":2355},{"krate":0,"index":1624},{"krate":0,"index":1630},{"krate":0,"index":1633},{"krate":0,"index":2357},{"krate":0,"index":2358},{"krate":0,"index":2359},{"krate":0,"index":1635},{"krate":0,"index":1641},{"krate":0,"index":1644},{"krate":0,"index":2361},{"krate":0,"index":2362},{"krate":0,"index":2363},{"krate":0,"index":1646},{"krate":0,"index":1652},{"krate":0,"index":1655},{"krate":0,"index":2365},{"krate":0,"index":2366},{"krate":0,"index":2367},{"krate":0,"index":1657},{"krate":0,"index":1663},{"krate":0,"index":1666},{"krate":0,"index":2369},{"krate":0,"index":2370},{"krate":0,"index":2371},{"krate":0,"index":1668},{"krate":0,"index":1674},{"krate":0,"index":1677},{"krate":0,"index":2373},{"krate":0,"index":2374},{"krate":0,"index":2375},{"krate":0,"index":1679},{"krate":0,"index":1685},{"krate":0,"index":1688},{"krate":0,"index":2377},{"krate":0,"index":2378},{"krate":0,"index":2379},{"krate":0,"index":1690},{"krate":0,"index":1696},{"krate":0,"index":1699},{"krate":0,"index":2381},{"krate":0,"index":2382},{"krate":0,"index":2383},{"krate":0,"index":1701},{"krate":0,"index":1707},{"krate":0,"index":1710},{"krate":0,"index":2385},{"krate":0,"index":2386},{"krate":0,"index":2387},{"krate":0,"index":1712},{"krate":0,"index":1718},{"krate":0,"index":1721},{"krate":0,"index":2389},{"krate":0,"index":2390},{"krate":0,"index":2391},{"krate":0,"index":1723},{"krate":0,"index":1729},{"krate":0,"index":1732},{"krate":0,"index":2393},{"krate":0,"index":2394},{"krate":0,"index":2395},{"krate":0,"index":1734},{"krate":0,"index":1740},{"krate":0,"index":1743},{"krate":0,"index":2397},{"krate":0,"index":2398},{"krate":0,"index":2399},{"krate":0,"index":1745},{"krate":0,"index":1751},{"krate":0,"index":1754},{"krate":0,"index":2401},{"krate":0,"index":2402},{"krate":0,"index":2403},{"krate":0,"index":1756},{"krate":0,"index":1762},{"krate":0,"index":1765},{"krate":0,"index":2405},{"krate":0,"index":2406},{"krate":0,"index":2407},{"krate":0,"index":1767},{"krate":0,"index":1773},{"krate":0,"index":1776},{"krate":0,"index":2409},{"krate":0,"index":2410},{"krate":0,"index":2411},{"krate":0,"index":1778},{"krate":0,"index":1784},{"krate":0,"index":1787},{"krate":0,"index":2413},{"krate":0,"index":2414},{"krate":0,"index":2415},{"krate":0,"index":1789},{"krate":0,"index":1795},{"krate":0,"index":1798},{"krate":0,"index":2417},{"krate":0,"index":2418},{"krate":0,"index":2419},{"krate":0,"index":1800},{"krate":0,"index":1806},{"krate":0,"index":1809},{"krate":0,"index":2421},{"krate":0,"index":2422},{"krate":0,"index":2423},{"krate":0,"index":1811},{"krate":0,"index":1817},{"krate":0,"index":1820},{"krate":0,"index":2425},{"krate":0,"index":2426},{"krate":0,"index":2427},{"krate":0,"index":1822},{"krate":0,"index":1828},{"krate":0,"index":1831},{"krate":0,"index":2429},{"krate":0,"index":2430},{"krate":0,"index":2431},{"krate":0,"index":1833},{"krate":0,"index":1839},{"krate":0,"index":1842},{"krate":0,"index":2433},{"krate":0,"index":2434},{"krate":0,"index":2435},{"krate":0,"index":1844},{"krate":0,"index":1850},{"krate":0,"index":1853},{"krate":0,"index":2437},{"krate":0,"index":2438},{"krate":0,"index":2439},{"krate":0,"index":1855},{"krate":0,"index":1861},{"krate":0,"index":1864},{"krate":0,"index":2441},{"krate":0,"index":2442},{"krate":0,"index":2443},{"krate":0,"index":1866},{"krate":0,"index":1872},{"krate":0,"index":1875},{"krate":0,"index":2445},{"krate":0,"index":2446},{"krate":0,"index":2447},{"krate":0,"index":1877},{"krate":0,"index":1883},{"krate":0,"index":1886},{"krate":0,"index":2449},{"krate":0,"index":2450},{"krate":0,"index":2451},{"krate":0,"index":1888},{"krate":0,"index":1894},{"krate":0,"index":1897},{"krate":0,"index":2453},{"krate":0,"index":2454},{"krate":0,"index":2455},{"krate":0,"index":1899},{"krate":0,"index":1905},{"krate":0,"index":1908},{"krate":0,"index":2457},{"krate":0,"index":2458},{"krate":0,"index":2459},{"krate":0,"index":1910},{"krate":0,"index":1916},{"krate":0,"index":1919},{"krate":0,"index":2461},{"krate":0,"index":2462},{"krate":0,"index":2463},{"krate":0,"index":1921},{"krate":0,"index":1927},{"krate":0,"index":1930},{"krate":0,"index":2465},{"krate":0,"index":2466},{"krate":0,"index":2467},{"krate":0,"index":1932},{"krate":0,"index":1938},{"krate":0,"index":1941},{"krate":0,"index":2469},{"krate":0,"index":2470},{"krate":0,"index":2471},{"krate":0,"index":1943},{"krate":0,"index":1949},{"krate":0,"index":1952},{"krate":0,"index":2473},{"krate":0,"index":2474},{"krate":0,"index":2475},{"krate":0,"index":1954},{"krate":0,"index":1960},{"krate":0,"index":1963}],"decl_id":null,"docs":" The default set of predefined specifiers.\n","sig":null,"attributes":[{"value":"/ The default set of predefined specifiers.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":15395,"byte_end":15440,"line_start":493,"line_end":493,"column_start":1,"column_end":46}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/error.rs","byte_start":15745,"byte_end":15756,"line_start":9,"line_end":9,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":10}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/error.rs","byte_start":16084,"byte_end":16101,"line_start":21,"line_end":21,"column_start":36,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":13}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/error.rs","byte_start":16356,"byte_end":16373,"line_start":34,"line_end":34,"column_start":13,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":16},{"krate":0,"index":17}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":20855,"byte_end":20863,"line_start":55,"line_end":55,"column_start":41,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":20911,"byte_end":20918,"line_start":57,"line_end":57,"column_start":44,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":20965,"byte_end":20972,"line_start":58,"line_end":58,"column_start":44,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":21019,"byte_end":21028,"line_start":59,"line_end":59,"column_start":44,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":21075,"byte_end":21083,"line_start":60,"line_end":60,"column_start":44,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":21130,"byte_end":21138,"line_start":61,"line_end":61,"column_start":44,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":21185,"byte_end":21192,"line_start":62,"line_end":62,"column_start":44,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":21239,"byte_end":21248,"line_start":63,"line_end":63,"column_start":44,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":22481,"byte_end":22485,"line_start":106,"line_end":106,"column_start":26,"column_end":30},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":22518,"byte_end":22522,"line_start":107,"line_end":107,"column_start":30,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":22561,"byte_end":22565,"line_start":108,"line_end":108,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":22597,"byte_end":22601,"line_start":109,"line_end":109,"column_start":29,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":22639,"byte_end":22643,"line_start":110,"line_end":110,"column_start":35,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/push_pop.rs","byte_start":29411,"byte_end":29420,"line_start":12,"line_end":12,"column_start":9,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/push_pop.rs","byte_start":29592,"byte_end":29601,"line_start":20,"line_end":20,"column_start":17,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/push_pop.rs","byte_start":29627,"byte_end":29636,"line_start":22,"line_end":22,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/push_pop.rs","byte_start":30975,"byte_end":30985,"line_start":63,"line_end":63,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":157}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":13480,"byte_end":13485,"line_start":420,"line_end":420,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":5}},{"kind":"Mod","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/lib.rs","byte_start":13510,"byte_end":13517,"line_start":422,"line_end":422,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":18}},{"kind":"Mod","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/mod.rs","byte_start":16694,"byte_end":16700,"line_start":2,"line_end":2,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":30}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/error.rs","byte_start":15745,"byte_end":15756,"line_start":9,"line_end":9,"column_start":29,"column_end":40},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":262},"to":{"krate":1,"index":9759}},{"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/error.rs","byte_start":16084,"byte_end":16101,"line_start":21,"line_end":21,"column_start":36,"column_end":53},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":272},"to":{"krate":1,"index":9759}},{"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/error.rs","byte_start":16356,"byte_end":16373,"line_start":34,"line_end":34,"column_start":13,"column_end":30},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":272},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":19841,"byte_end":19847,"line_start":17,"line_end":17,"column_start":52,"column_end":58},"kind":"SuperTrait","from":{"krate":0,"index":32},"to":{"krate":0,"index":34}},{"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":20030,"byte_end":20036,"line_start":21,"line_end":21,"column_start":55,"column_end":61},"kind":"SuperTrait","from":{"krate":0,"index":32},"to":{"krate":0,"index":35}},{"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":20128,"byte_end":20134,"line_start":24,"line_end":24,"column_start":36,"column_end":42},"kind":"SuperTrait","from":{"krate":0,"index":32},"to":{"krate":0,"index":36}},{"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":20855,"byte_end":20863,"line_start":55,"line_end":55,"column_start":41,"column_end":49},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":434},"to":{"krate":0,"index":34}},{"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":20911,"byte_end":20918,"line_start":57,"line_end":57,"column_start":44,"column_end":51},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":441},"to":{"krate":0,"index":35}},{"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":20965,"byte_end":20972,"line_start":58,"line_end":58,"column_start":44,"column_end":51},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":448},"to":{"krate":0,"index":35}},{"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":21019,"byte_end":21028,"line_start":59,"line_end":59,"column_start":44,"column_end":53},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":455},"to":{"krate":0,"index":35}},{"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":21075,"byte_end":21083,"line_start":60,"line_end":60,"column_start":44,"column_end":52},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":462},"to":{"krate":0,"index":35}},{"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":21130,"byte_end":21138,"line_start":61,"line_end":61,"column_start":44,"column_end":52},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":469},"to":{"krate":0,"index":35}},{"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":21185,"byte_end":21192,"line_start":62,"line_end":62,"column_start":44,"column_end":51},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":476},"to":{"krate":0,"index":35}},{"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":21239,"byte_end":21248,"line_start":63,"line_end":63,"column_start":44,"column_end":53},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":483},"to":{"krate":0,"index":35}},{"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":21992,"byte_end":21998,"line_start":85,"line_end":85,"column_start":41,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":32},"to":{"krate":0,"index":55}},{"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":22163,"byte_end":22169,"line_start":90,"line_end":90,"column_start":47,"column_end":53},"kind":"SuperTrait","from":{"krate":0,"index":32},"to":{"krate":0,"index":56}},{"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":22481,"byte_end":22485,"line_start":106,"line_end":106,"column_start":26,"column_end":30},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":57},"to":{"krate":0,"index":32}},{"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":22518,"byte_end":22522,"line_start":107,"line_end":107,"column_start":30,"column_end":34},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":57},"to":{"krate":0,"index":55}},{"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":22561,"byte_end":22565,"line_start":108,"line_end":108,"column_start":36,"column_end":40},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":57},"to":{"krate":0,"index":56}},{"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":22597,"byte_end":22601,"line_start":109,"line_end":109,"column_start":29,"column_end":33},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":57},"to":{"krate":0,"index":84}},{"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":22639,"byte_end":22643,"line_start":110,"line_end":110,"column_start":35,"column_end":39},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":57},"to":{"krate":0,"index":87}},{"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/checks.rs","byte_start":22743,"byte_end":22749,"line_start":113,"line_end":113,"column_start":39,"column_end":45},"kind":"SuperTrait","from":{"krate":0,"index":32},"to":{"krate":0,"index":64}},{"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/push_pop.rs","byte_start":29411,"byte_end":29420,"line_start":12,"line_end":12,"column_start":9,"column_end":18},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":142},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/push_pop.rs","byte_start":29592,"byte_end":29601,"line_start":20,"line_end":20,"column_start":17,"column_end":26},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":142},"to":{"krate":0,"index":32}},{"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/push_pop.rs","byte_start":29627,"byte_end":29636,"line_start":22,"line_end":22,"column_start":18,"column_end":27},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":142},"to":{"krate":0,"index":165}},{"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/push_pop.rs","byte_start":30975,"byte_end":30985,"line_start":63,"line_end":63,"column_start":9,"column_end":19},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":152},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/traits.rs","byte_start":32327,"byte_end":32333,"line_start":9,"line_end":9,"column_start":38,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":32},"to":{"krate":0,"index":163}},{"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/traits.rs","byte_start":32583,"byte_end":32589,"line_start":19,"line_end":19,"column_start":37,"column_end":43},"kind":"SuperTrait","from":{"krate":0,"index":32},"to":{"krate":0,"index":165}},{"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/traits.rs","byte_start":32783,"byte_end":32789,"line_start":25,"line_end":25,"column_start":44,"column_end":50},"kind":"SuperTrait","from":{"krate":0,"index":32},"to":{"krate":0,"index":167}},{"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/traits.rs","byte_start":32912,"byte_end":32918,"line_start":30,"line_end":30,"column_start":44,"column_end":50},"kind":"SuperTrait","from":{"krate":0,"index":32},"to":{"krate":0,"index":169}},{"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/traits.rs","byte_start":32966,"byte_end":32972,"line_start":31,"line_end":31,"column_start":45,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":32},"to":{"krate":0,"index":170}},{"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/traits.rs","byte_start":33020,"byte_end":33026,"line_start":32,"line_end":32,"column_start":45,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":32},"to":{"krate":0,"index":171}},{"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/traits.rs","byte_start":33074,"byte_end":33080,"line_start":33,"line_end":33,"column_start":45,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":32},"to":{"krate":0,"index":172}},{"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/modular-bitfield-0.11.2/src/private/traits.rs","byte_start":33129,"byte_end":33135,"line_start":34,"line_end":34,"column_start":46,"column_end":52},"kind":"SuperTrait","from":{"krate":0,"index":32},"to":{"krate":0,"index":173}}]}