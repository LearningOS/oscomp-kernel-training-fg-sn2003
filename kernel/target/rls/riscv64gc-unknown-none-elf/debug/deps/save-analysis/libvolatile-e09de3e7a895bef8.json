{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0","program":"/home/stellaris/.rustup/toolchains/nightly-2022-04-11-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","volatile","/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=e09de3e7a895bef8","-C","extra-filename=-e09de3e7a895bef8","--out-dir","/home/stellaris/operation_system/oskernel2022-oops/kernel/target/rls/riscv64gc-unknown-none-elf/debug/deps","--target","riscv64gc-unknown-none-elf","-L","dependency=/home/stellaris/operation_system/oskernel2022-oops/kernel/target/rls/riscv64gc-unknown-none-elf/debug/deps","-L","dependency=/home/stellaris/operation_system/oskernel2022-oops/kernel/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/stellaris/.rustup/toolchains/nightly-2022-04-11-x86_64-unknown-linux-gnu"],"output":"/home/stellaris/operation_system/oskernel2022-oops/kernel/target/rls/riscv64gc-unknown-none-elf/debug/deps/libvolatile-e09de3e7a895bef8.rmeta"},"prelude":{"crate_id":{"name":"volatile","disambiguator":[3980447653193481274,0]},"crate_root":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src","external_crates":[{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[16824974774548153985,0]}},{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[18062996579175346233,0]}},{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[1534907499907218240,0]}}],"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":0,"byte_end":8608,"line_start":1,"line_end":310,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":0,"byte_end":8608,"line_start":1,"line_end":310,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":27},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":7},{"krate":0,"index":14},{"krate":0,"index":37},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":17},{"krate":0,"index":50},{"krate":0,"index":54},{"krate":0,"index":21},{"krate":0,"index":25}],"decl_id":null,"docs":" Provides wrapper types `Volatile`, `ReadOnly`, `WriteOnly`, `ReadWrite`, which wrap any copy-able type and allows for\n volatile memory access to wrapped value. Volatile memory accesses are never optimized away by\n the compiler, and are useful in many low-level systems programming and concurrent contexts.","sig":null,"attributes":[{"value":"/ Provides wrapper types `Volatile`, `ReadOnly`, `WriteOnly`, `ReadWrite`, which wrap any copy-able type and allows for","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":55,"byte_end":176,"line_start":3,"line_end":3,"column_start":1,"column_end":122}},{"value":"/ volatile memory access to wrapped value. Volatile memory accesses are never optimized away by","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":177,"byte_end":274,"line_start":4,"line_end":4,"column_start":1,"column_end":98}},{"value":"/ the compiler, and are useful in many low-level systems programming and concurrent contexts.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":275,"byte_end":370,"line_start":5,"line_end":5,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":371,"byte_end":374,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ The wrapper types *do not* enforce any atomicity guarantees; to also get atomicity, consider","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":375,"byte_end":471,"line_start":7,"line_end":7,"column_start":1,"column_end":97}},{"value":"/ looking at the `Atomic` wrapper type found in `libcore` or `libstd`.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":472,"byte_end":544,"line_start":8,"line_end":8,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":545,"byte_end":548,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ These wrappers do not depend on the standard library and never panic.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":549,"byte_end":622,"line_start":10,"line_end":10,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":623,"byte_end":626,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Dealing with Volatile Pointers","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":627,"byte_end":663,"line_start":12,"line_end":12,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":664,"byte_end":667,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Frequently, one may have to deal with volatile pointers, eg, writes to specific memory","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":668,"byte_end":758,"line_start":14,"line_end":14,"column_start":1,"column_end":91}},{"value":"/ locations. The canonical way to solve this is to cast the pointer to a volatile wrapper","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":759,"byte_end":850,"line_start":15,"line_end":15,"column_start":1,"column_end":92}},{"value":"/ directly, eg:","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":851,"byte_end":868,"line_start":16,"line_end":16,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":869,"byte_end":872,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":873,"byte_end":884,"line_start":18,"line_end":18,"column_start":1,"column_end":12}},{"value":"/ use volatile::Volatile;","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":885,"byte_end":912,"line_start":19,"line_end":19,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":913,"byte_end":916,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ let mut_ptr = 0xFEE00000 as *mut u32;","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":917,"byte_end":958,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":959,"byte_end":962,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ let volatile_ptr = mut_ptr as *mut Volatile<u32>;","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":963,"byte_end":1016,"line_start":23,"line_end":23,"column_start":1,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":1017,"byte_end":1024,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":1025,"byte_end":1028,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ and then perform operations on the pointer as usual in a volatile way. This method works as all","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":1029,"byte_end":1128,"line_start":26,"line_end":26,"column_start":1,"column_end":100}},{"value":"/ of the volatile wrapper types are the same size as their contained values.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":1129,"byte_end":1207,"line_start":27,"line_end":27,"column_start":1,"column_end":79}},{"value":"no_std","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":1208,"byte_end":1218,"line_start":28,"line_end":28,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":27},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":1597,"byte_end":1605,"line_start":39,"line_end":39,"column_start":12,"column_end":20},"name":"Volatile","qualname":"::Volatile","value":"","parent":null,"children":[],"decl_id":null,"docs":" A wrapper type around a volatile variable, which allows for volatile reads and writes\n to the contained value. The stored type needs to be `Copy`, as volatile reads and writes\n take and return copies of the value.","sig":null,"attributes":[{"value":"/ A wrapper type around a volatile variable, which allows for volatile reads and writes","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":1236,"byte_end":1325,"line_start":32,"line_end":32,"column_start":1,"column_end":90}},{"value":"/ to the contained value. The stored type needs to be `Copy`, as volatile reads and writes","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":1326,"byte_end":1418,"line_start":33,"line_end":33,"column_start":1,"column_end":93}},{"value":"/ take and return copies of the value.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":1419,"byte_end":1459,"line_start":34,"line_end":34,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":1460,"byte_end":1463,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ The size of this struct is the same as the size of the contained type.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":1464,"byte_end":1538,"line_start":36,"line_end":36,"column_start":1,"column_end":75}},{"value":"repr(transparent)","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":1565,"byte_end":1585,"line_start":38,"line_end":38,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":9},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":2313,"byte_end":2316,"line_start":70,"line_end":70,"column_start":12,"column_end":15},"name":"new","qualname":"<Volatile<T>>::new","value":"pub fn new(T) -> Volatile<T>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new volatile instance wrapping the given value.","sig":null,"attributes":[{"value":"/ Construct a new volatile instance wrapping the given value.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":2016,"byte_end":2079,"line_start":58,"line_end":58,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":2084,"byte_end":2087,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":2092,"byte_end":2103,"line_start":60,"line_end":60,"column_start":5,"column_end":16}},{"value":"/ use volatile::Volatile;","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":2108,"byte_end":2135,"line_start":61,"line_end":61,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":2140,"byte_end":2143,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ let value = Volatile::new(0u32);","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":2148,"byte_end":2184,"line_start":63,"line_end":63,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":2189,"byte_end":2196,"line_start":64,"line_end":64,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":2201,"byte_end":2204,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":2209,"byte_end":2221,"line_start":66,"line_end":66,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":2226,"byte_end":2229,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ This method never panics.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":2234,"byte_end":2263,"line_start":68,"line_end":68,"column_start":5,"column_end":34}},{"value":"cfg(not(feature = \"const_fn\"))","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":2268,"byte_end":2301,"line_start":69,"line_end":69,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":10},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":2937,"byte_end":2941,"line_start":90,"line_end":90,"column_start":12,"column_end":16},"name":"read","qualname":"<Volatile<T>>::read","value":"pub fn read(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Performs a volatile read of the contained value, returning a copy\n of the read value. Volatile reads are guaranteed not to be optimized\n away by the compiler, but by themselves do not have atomic ordering\n guarantees. To also get atomicity, consider looking at the `Atomic` wrapper type.","sig":null,"attributes":[{"value":"/ Performs a volatile read of the contained value, returning a copy","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":2379,"byte_end":2448,"line_start":74,"line_end":74,"column_start":5,"column_end":74}},{"value":"/ of the read value. Volatile reads are guaranteed not to be optimized","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":2453,"byte_end":2525,"line_start":75,"line_end":75,"column_start":5,"column_end":77}},{"value":"/ away by the compiler, but by themselves do not have atomic ordering","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":2530,"byte_end":2601,"line_start":76,"line_end":76,"column_start":5,"column_end":76}},{"value":"/ guarantees. To also get atomicity, consider looking at the `Atomic` wrapper type.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":2606,"byte_end":2691,"line_start":77,"line_end":77,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":2696,"byte_end":2699,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":2704,"byte_end":2715,"line_start":79,"line_end":79,"column_start":5,"column_end":16}},{"value":"/ use volatile::Volatile;","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":2720,"byte_end":2747,"line_start":80,"line_end":80,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":2752,"byte_end":2755,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ let value = Volatile::new(42u32);","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":2760,"byte_end":2797,"line_start":82,"line_end":82,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":2802,"byte_end":2805,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(value.read(), 42u32);","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":2810,"byte_end":2846,"line_start":84,"line_end":84,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":2851,"byte_end":2858,"line_start":85,"line_end":85,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":2863,"byte_end":2866,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":2871,"byte_end":2883,"line_start":87,"line_end":87,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":2888,"byte_end":2891,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ This method never panics.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":2896,"byte_end":2925,"line_start":89,"line_end":89,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":11},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":3678,"byte_end":3683,"line_start":113,"line_end":113,"column_start":12,"column_end":17},"name":"write","qualname":"<Volatile<T>>::write","value":"pub fn write(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Performs a volatile write, setting the contained value to the given value `value`. Volatile\n writes are guaranteed to not be optimized away by the compiler, but by themselves do not\n have atomic ordering guarantees. To also get atomicity, consider looking at the `Atomic`\n wrapper type.","sig":null,"attributes":[{"value":"/ Performs a volatile write, setting the contained value to the given value `value`. Volatile","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":3082,"byte_end":3177,"line_start":95,"line_end":95,"column_start":5,"column_end":100}},{"value":"/ writes are guaranteed to not be optimized away by the compiler, but by themselves do not","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":3182,"byte_end":3274,"line_start":96,"line_end":96,"column_start":5,"column_end":97}},{"value":"/ have atomic ordering guarantees. To also get atomicity, consider looking at the `Atomic`","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":3279,"byte_end":3371,"line_start":97,"line_end":97,"column_start":5,"column_end":97}},{"value":"/ wrapper type.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":3376,"byte_end":3393,"line_start":98,"line_end":98,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":3398,"byte_end":3401,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":3406,"byte_end":3417,"line_start":100,"line_end":100,"column_start":5,"column_end":16}},{"value":"/ use volatile::Volatile;","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":3422,"byte_end":3449,"line_start":101,"line_end":101,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":3454,"byte_end":3457,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ let mut value = Volatile::new(0u32);","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":3462,"byte_end":3502,"line_start":103,"line_end":103,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":3507,"byte_end":3510,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ value.write(42u32);","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":3515,"byte_end":3538,"line_start":105,"line_end":105,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":3543,"byte_end":3546,"line_start":106,"line_end":106,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(value.read(), 42u32);","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":3551,"byte_end":3587,"line_start":107,"line_end":107,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":3592,"byte_end":3599,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":3604,"byte_end":3607,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":3612,"byte_end":3624,"line_start":110,"line_end":110,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":3629,"byte_end":3632,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ This method never panics.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":3637,"byte_end":3666,"line_start":112,"line_end":112,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":12},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":4371,"byte_end":4377,"line_start":135,"line_end":135,"column_start":12,"column_end":18},"name":"update","qualname":"<Volatile<T>>::update","value":"pub fn update<F>(&mut Self, F) where F: FnOnce(&mut T) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Performs a volatile read of the contained value, passes a mutable reference to it to the\n function `f`, and then performs a volatile write of the (potentially updated) value back to\n the contained value.","sig":null,"attributes":[{"value":"/ Performs a volatile read of the contained value, passes a mutable reference to it to the","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":3846,"byte_end":3938,"line_start":118,"line_end":118,"column_start":5,"column_end":97}},{"value":"/ function `f`, and then performs a volatile write of the (potentially updated) value back to","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":3943,"byte_end":4038,"line_start":119,"line_end":119,"column_start":5,"column_end":100}},{"value":"/ the contained value.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":4043,"byte_end":4067,"line_start":120,"line_end":120,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":4072,"byte_end":4075,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":4080,"byte_end":4091,"line_start":122,"line_end":122,"column_start":5,"column_end":16}},{"value":"/ use volatile::Volatile;","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":4096,"byte_end":4123,"line_start":123,"line_end":123,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":4128,"byte_end":4131,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ let mut value = Volatile::new(21u32);","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":4136,"byte_end":4177,"line_start":125,"line_end":125,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":4182,"byte_end":4185,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ value.update(|val_ref| *val_ref *= 2);","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":4190,"byte_end":4232,"line_start":127,"line_end":127,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":4237,"byte_end":4240,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(value.read(), 42u32);","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":4245,"byte_end":4281,"line_start":129,"line_end":129,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":4286,"byte_end":4293,"line_start":130,"line_end":130,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":4298,"byte_end":4301,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":4306,"byte_end":4318,"line_start":132,"line_end":132,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":4323,"byte_end":4326,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ Ths method never panics.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":4331,"byte_end":4359,"line_start":134,"line_end":134,"column_start":5,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":37},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":4813,"byte_end":4821,"line_start":155,"line_end":155,"column_start":12,"column_end":20},"name":"ReadOnly","qualname":"::ReadOnly","value":"","parent":null,"children":[],"decl_id":null,"docs":" A volatile wrapper which only allows read operations.","sig":null,"attributes":[{"value":"/ A volatile wrapper which only allows read operations.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":4644,"byte_end":4701,"line_start":151,"line_end":151,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":4702,"byte_end":4705,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ The size of this struct is the same as the contained type.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":4706,"byte_end":4768,"line_start":153,"line_end":153,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":19},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":5578,"byte_end":5581,"line_start":186,"line_end":186,"column_start":12,"column_end":15},"name":"new","qualname":"<ReadOnly<T>>::new","value":"pub fn new(T) -> ReadOnly<T>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new read-only volatile wrapper wrapping the given value.","sig":null,"attributes":[{"value":"/ Construct a new read-only volatile wrapper wrapping the given value.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":5269,"byte_end":5341,"line_start":174,"line_end":174,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":5346,"byte_end":5349,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":5354,"byte_end":5365,"line_start":176,"line_end":176,"column_start":5,"column_end":16}},{"value":"/ use volatile::ReadOnly;","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":5370,"byte_end":5397,"line_start":177,"line_end":177,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":5402,"byte_end":5405,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ let value = ReadOnly::new(42u32);","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":5410,"byte_end":5447,"line_start":179,"line_end":179,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":5452,"byte_end":5459,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":5464,"byte_end":5467,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":5472,"byte_end":5484,"line_start":182,"line_end":182,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":5489,"byte_end":5492,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ This function never panics.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":5497,"byte_end":5528,"line_start":184,"line_end":184,"column_start":5,"column_end":36}},{"value":"cfg(not(feature = \"const_fn\"))","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":5533,"byte_end":5566,"line_start":185,"line_end":185,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":20},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":6039,"byte_end":6043,"line_start":203,"line_end":203,"column_start":12,"column_end":16},"name":"read","qualname":"<ReadOnly<T>>::read","value":"pub fn read(&Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Perform a volatile read of the contained value, returning a copy of the read value.\n Functionally equivalent to `Volatile::read`.","sig":null,"attributes":[{"value":"/ Perform a volatile read of the contained value, returning a copy of the read value.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":5659,"byte_end":5746,"line_start":190,"line_end":190,"column_start":5,"column_end":92}},{"value":"/ Functionally equivalent to `Volatile::read`.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":5751,"byte_end":5799,"line_start":191,"line_end":191,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":5804,"byte_end":5807,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":5812,"byte_end":5823,"line_start":193,"line_end":193,"column_start":5,"column_end":16}},{"value":"/ use volatile::ReadOnly;","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":5828,"byte_end":5855,"line_start":194,"line_end":194,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":5860,"byte_end":5863,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ let value = ReadOnly::new(42u32);","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":5868,"byte_end":5905,"line_start":196,"line_end":196,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(value.read(), 42u32);","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":5910,"byte_end":5946,"line_start":197,"line_end":197,"column_start":5,"column_end":41}},{"value":"/ ```","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":5951,"byte_end":5958,"line_start":198,"line_end":198,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":5963,"byte_end":5966,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":5971,"byte_end":5983,"line_start":200,"line_end":200,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":5988,"byte_end":5991,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ This function never panics.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":5996,"byte_end":6027,"line_start":202,"line_end":202,"column_start":5,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":50},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":6245,"byte_end":6254,"line_start":212,"line_end":212,"column_start":12,"column_end":21},"name":"WriteOnly","qualname":"::WriteOnly","value":"","parent":null,"children":[],"decl_id":null,"docs":" A volatile wrapper which only allows write operations.","sig":null,"attributes":[{"value":"/ A volatile wrapper which only allows write operations.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":6089,"byte_end":6147,"line_start":208,"line_end":208,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":6148,"byte_end":6151,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ The size of this struct is the same as the contained type.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":6152,"byte_end":6214,"line_start":210,"line_end":210,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":23},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":7016,"byte_end":7019,"line_start":243,"line_end":243,"column_start":12,"column_end":15},"name":"new","qualname":"<WriteOnly<T>>::new","value":"pub fn new(T) -> WriteOnly<T>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new write only volatile wrapper around the given value.","sig":null,"attributes":[{"value":"/ Constructs a new write only volatile wrapper around the given value.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":6706,"byte_end":6778,"line_start":231,"line_end":231,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":6783,"byte_end":6786,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":6791,"byte_end":6802,"line_start":233,"line_end":233,"column_start":5,"column_end":16}},{"value":"/ use volatile::WriteOnly;","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":6807,"byte_end":6835,"line_start":234,"line_end":234,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":6840,"byte_end":6843,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ let value = WriteOnly::new(0u32);","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":6848,"byte_end":6885,"line_start":236,"line_end":236,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":6890,"byte_end":6897,"line_start":237,"line_end":237,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":6902,"byte_end":6905,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":6910,"byte_end":6922,"line_start":239,"line_end":239,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":6927,"byte_end":6930,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ This function never panics.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":6935,"byte_end":6966,"line_start":241,"line_end":241,"column_start":5,"column_end":36}},{"value":"cfg(not(feature = \"const_fn\"))","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":6971,"byte_end":7004,"line_start":242,"line_end":242,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":7462,"byte_end":7467,"line_start":261,"line_end":261,"column_start":12,"column_end":17},"name":"write","qualname":"<WriteOnly<T>>::write","value":"pub fn write(&mut Self, T)","parent":null,"children":[],"decl_id":null,"docs":" Performs a volatile write of value `value` into the contained value. Functionally identical\n to `Volatile::write`.","sig":null,"attributes":[{"value":"/ Performs a volatile write of value `value` into the contained value. Functionally identical","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":7099,"byte_end":7194,"line_start":247,"line_end":247,"column_start":5,"column_end":100}},{"value":"/ to `Volatile::write`.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":7199,"byte_end":7224,"line_start":248,"line_end":248,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":7229,"byte_end":7232,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":7237,"byte_end":7248,"line_start":250,"line_end":250,"column_start":5,"column_end":16}},{"value":"/ use volatile::WriteOnly;","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":7253,"byte_end":7281,"line_start":251,"line_end":251,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":7286,"byte_end":7289,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ let mut value = WriteOnly::new(0u32);","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":7294,"byte_end":7335,"line_start":253,"line_end":253,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":7340,"byte_end":7343,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ value.write(42u32);","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":7348,"byte_end":7371,"line_start":255,"line_end":255,"column_start":5,"column_end":28}},{"value":"/ ```","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":7376,"byte_end":7383,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":7388,"byte_end":7391,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":7396,"byte_end":7408,"line_start":258,"line_end":258,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":7413,"byte_end":7416,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This method never panics.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":7421,"byte_end":7450,"line_start":260,"line_end":260,"column_start":5,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":25},"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":7758,"byte_end":7767,"line_start":271,"line_end":271,"column_start":10,"column_end":19},"name":"ReadWrite","qualname":"::ReadWrite","value":"Volatile<T>","parent":null,"children":[],"decl_id":null,"docs":" A volatile wrapper which allows both read and write operations;\n functionally equivalent to the `Volatile` type, as it is a type\n alias for it.","sig":null,"attributes":[{"value":"/ A volatile wrapper which allows both read and write operations;","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":7528,"byte_end":7595,"line_start":266,"line_end":266,"column_start":1,"column_end":68}},{"value":"/ functionally equivalent to the `Volatile` type, as it is a type","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":7596,"byte_end":7663,"line_start":267,"line_end":267,"column_start":1,"column_end":68}},{"value":"/ alias for it.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":7664,"byte_end":7681,"line_start":268,"line_end":268,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":7682,"byte_end":7685,"line_start":269,"line_end":269,"column_start":1,"column_end":4}},{"value":"/ The size of this struct is the same as the contained type.","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":7686,"byte_end":7748,"line_start":270,"line_end":270,"column_start":1,"column_end":63}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":1634,"byte_end":1642,"line_start":41,"line_end":41,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":4561,"byte_end":4569,"line_start":145,"line_end":145,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":16}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":4860,"byte_end":4868,"line_start":157,"line_end":157,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":19},{"krate":0,"index":20}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":6293,"byte_end":6302,"line_start":214,"line_end":214,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":23},{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":1634,"byte_end":1642,"line_start":41,"line_end":41,"column_start":15,"column_end":23},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":27},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":4561,"byte_end":4569,"line_start":145,"line_end":145,"column_start":25,"column_end":33},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":27},"to":{"krate":1,"index":2730}},{"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":4860,"byte_end":4868,"line_start":157,"line_end":157,"column_start":15,"column_end":23},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":37},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/stellaris/.cargo/registry/src/github.com-1ecc6299db9ec823/volatile-0.3.0/src/lib.rs","byte_start":6293,"byte_end":6302,"line_start":214,"line_end":214,"column_start":15,"column_end":24},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":50},"to":{"krate":4294967295,"index":4294967295}}]}